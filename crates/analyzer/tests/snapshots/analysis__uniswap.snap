---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"demos/uniswap.fe\", &src, &context)"

---
ModuleAttributes {
    type_defs: {
        "ERC20": Contract(
            Contract {
                name: "ERC20",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "balanceOf",
                        params: [
                            (
                                "account",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "transfer",
                        params: [
                            (
                                "recipient",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "amount",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                ],
            },
        ),
        "UniswapV2Factory": Contract(
            Contract {
                name: "UniswapV2Factory",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "all_pairs_length",
                        params: [],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "create_pair",
                        params: [
                            (
                                "token_a",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "token_b",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "fee_to",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "fee_to_setter",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "set_fee_to",
                        params: [
                            (
                                "fee_to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "set_fee_to_setter",
                        params: [
                            (
                                "fee_to_setter",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                ],
            },
        ),
        "UniswapV2Pair": Contract(
            Contract {
                name: "UniswapV2Pair",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "approve",
                        params: [
                            (
                                "spender",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "value",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "balanceOf",
                        params: [
                            (
                                "account",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "burn",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Tuple(
                            Tuple {
                                items: [
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                ],
                            },
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "factory",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "get_reserves",
                        params: [],
                        return_type: Tuple(
                            Tuple {
                                items: [
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                ],
                            },
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "initialize",
                        params: [
                            (
                                "token0",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "token1",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "mint",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "skim",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "swap",
                        params: [
                            (
                                "amount0_out",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "amount1_out",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "sync",
                        params: [],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "token0",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "token1",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "transfer",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "value",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "transferFrom",
                        params: [
                            (
                                "from",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "value",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                ],
            },
        ),
    },
}

note: 
  ┌─ demos/uniswap.fe:3:16
  │
3 │         return 0
  │                ^ attributes hash: 1230752710897721197
  │
  = ExpressionAttributes {
        typ: Base(
            Numeric(
                U256,
            ),
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ demos/uniswap.fe:6:16
  │
6 │         return false
  │                ^^^^^ attributes hash: 519621297275845584
  │
  = ExpressionAttributes {
        typ: Base(
            Bool,
        ),
        location: Value,
        move_location: None,
    }

note: 
   ┌─ demos/uniswap.fe:64:9
   │
64 │         self.factory = msg.sender
   │         ^^^^^^^^^^^^ attributes hash: 2341220378375760995
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Storage {
             nonce: Some(
                 4,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:64:24
   │
64 │         self.factory = msg.sender
   │                        ^^^^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:67:16
   │
67 │         return self.factory
   │                ^^^^^^^^^^^^ attributes hash: 5981090452764355831
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Storage {
             nonce: Some(
                 4,
             ),
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:70:16
   │
70 │         return self.token0
   │                ^^^^^^^^^^^ attributes hash: 11487989211214973446
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Storage {
             nonce: Some(
                 5,
             ),
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:73:16
   │
73 │         return self.token1
   │                ^^^^^^^^^^^ attributes hash: 1129018936215820185
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Storage {
             nonce: Some(
                 6,
             ),
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:76:9
   │
76 │         self.total_supply = self.total_supply + value
   │         ^^^^^^^^^^^^^^^^^ attributes hash: 7483357330733323884
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: Some(
                 2,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:76:29
   │
76 │         self.total_supply = self.total_supply + value
   │                             ^^^^^^^^^^^^^^^^^ attributes hash: 2554289623849491432
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: Some(
                 2,
             ),
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:76:49
   │
76 │         self.total_supply = self.total_supply + value
   │                                                 ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:76:29
   │
76 │         self.total_supply = self.total_supply + value
   │                             ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:77:9
   │
77 │         self.balances[to] = self.balances[to] + value
   │         ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:77:23
   │
77 │         self.balances[to] = self.balances[to] + value
   │                       ^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:77:9
   │
77 │         self.balances[to] = self.balances[to] + value
   │         ^^^^^^^^^^^^^^^^^ attributes hash: 6410008273718378934
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:77:29
   │
77 │         self.balances[to] = self.balances[to] + value
   │                             ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:77:43
   │
77 │         self.balances[to] = self.balances[to] + value
   │                                           ^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:77:29
   │
77 │         self.balances[to] = self.balances[to] + value
   │                             ^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:77:49
   │
77 │         self.balances[to] = self.balances[to] + value
   │                                                 ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:77:29
   │
77 │         self.balances[to] = self.balances[to] + value
   │                             ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:78:36
   │
78 │         emit Transfer(from=address(0), to, value)
   │                                    ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:78:28
   │
78 │         emit Transfer(from=address(0), to, value)
   │                            ^^^^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:78:40
   │
78 │         emit Transfer(from=address(0), to, value)
   │                                        ^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:78:44
   │
78 │         emit Transfer(from=address(0), to, value)
   │                                            ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:81:9
   │
81 │         self.balances[from] = self.balances[from] - value
   │         ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:81:23
   │
81 │         self.balances[from] = self.balances[from] - value
   │                       ^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:81:9
   │
81 │         self.balances[from] = self.balances[from] - value
   │         ^^^^^^^^^^^^^^^^^^^ attributes hash: 6410008273718378934
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:81:31
   │
81 │         self.balances[from] = self.balances[from] - value
   │                               ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:81:45
   │
81 │         self.balances[from] = self.balances[from] - value
   │                                             ^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:81:31
   │
81 │         self.balances[from] = self.balances[from] - value
   │                               ^^^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:81:53
   │
81 │         self.balances[from] = self.balances[from] - value
   │                                                     ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:81:31
   │
81 │         self.balances[from] = self.balances[from] - value
   │                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:82:9
   │
82 │         self.total_supply = self.total_supply - value
   │         ^^^^^^^^^^^^^^^^^ attributes hash: 7483357330733323884
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: Some(
                 2,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:82:29
   │
82 │         self.total_supply = self.total_supply - value
   │                             ^^^^^^^^^^^^^^^^^ attributes hash: 2554289623849491432
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: Some(
                 2,
             ),
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:82:49
   │
82 │         self.total_supply = self.total_supply - value
   │                                                 ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:82:29
   │
82 │         self.total_supply = self.total_supply - value
   │                             ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:83:23
   │
83 │         emit Transfer(from, to=address(0), value)
   │                       ^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:83:40
   │
83 │         emit Transfer(from, to=address(0), value)
   │                                        ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:83:32
   │
83 │         emit Transfer(from, to=address(0), value)
   │                                ^^^^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:83:44
   │
83 │         emit Transfer(from, to=address(0), value)
   │                                            ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:86:9
   │
86 │         self.allowances[owner][spender] = value
   │         ^^^^^^^^^^^^^^^ attributes hash: 12706141037245906298
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Map(
                     Map {
                         key: Address,
                         value: Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     },
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 1,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:86:25
   │
86 │         self.allowances[owner][spender] = value
   │                         ^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:86:9
   │
86 │         self.allowances[owner][spender] = value
   │         ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13465984430266063783
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: None,
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:86:32
   │
86 │         self.allowances[owner][spender] = value
   │                                ^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:86:9
   │
86 │         self.allowances[owner][spender] = value
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 6410008273718378934
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:86:43
   │
86 │         self.allowances[owner][spender] = value
   │                                           ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:87:23
   │
87 │         emit Approval(owner, spender, value)
   │                       ^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:87:30
   │
87 │         emit Approval(owner, spender, value)
   │                              ^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:87:39
   │
87 │         emit Approval(owner, spender, value)
   │                                       ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:90:9
   │
90 │         self.balances[from] = self.balances[from] - value
   │         ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:90:23
   │
90 │         self.balances[from] = self.balances[from] - value
   │                       ^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:90:9
   │
90 │         self.balances[from] = self.balances[from] - value
   │         ^^^^^^^^^^^^^^^^^^^ attributes hash: 6410008273718378934
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:90:31
   │
90 │         self.balances[from] = self.balances[from] - value
   │                               ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:90:45
   │
90 │         self.balances[from] = self.balances[from] - value
   │                                             ^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:90:31
   │
90 │         self.balances[from] = self.balances[from] - value
   │                               ^^^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:90:53
   │
90 │         self.balances[from] = self.balances[from] - value
   │                                                     ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:90:31
   │
90 │         self.balances[from] = self.balances[from] - value
   │                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:91:9
   │
91 │         self.balances[to] = self.balances[to] + value
   │         ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:91:23
   │
91 │         self.balances[to] = self.balances[to] + value
   │                       ^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:91:9
   │
91 │         self.balances[to] = self.balances[to] + value
   │         ^^^^^^^^^^^^^^^^^ attributes hash: 6410008273718378934
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:91:29
   │
91 │         self.balances[to] = self.balances[to] + value
   │                             ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
   │
   = ExpressionAttributes {
         typ: Map(
             Map {
                 key: Address,
                 value: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:91:43
   │
91 │         self.balances[to] = self.balances[to] + value
   │                                           ^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:91:29
   │
91 │         self.balances[to] = self.balances[to] + value
   │                             ^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: None,
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:91:49
   │
91 │         self.balances[to] = self.balances[to] + value
   │                                                 ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:91:29
   │
91 │         self.balances[to] = self.balances[to] + value
   │                             ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:92:23
   │
92 │         emit Transfer(from, to, value)
   │                       ^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:92:29
   │
92 │         emit Transfer(from, to, value)
   │                             ^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:92:33
   │
92 │         emit Transfer(from, to, value)
   │                                 ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:95:23
   │
95 │         self._approve(msg.sender, spender, value)
   │                       ^^^^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:95:35
   │
95 │         self._approve(msg.sender, spender, value)
   │                                   ^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:95:44
   │
95 │         self._approve(msg.sender, spender, value)
   │                                            ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:95:9
   │
95 │         self._approve(msg.sender, spender, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
   │
   = ExpressionAttributes {
         typ: Base(
             Unit,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:96:16
   │
96 │         return true
   │                ^^^^ attributes hash: 519621297275845584
   │
   = ExpressionAttributes {
         typ: Base(
             Bool,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:99:24
   │
99 │         self._transfer(msg.sender, to, value)
   │                        ^^^^^^^^^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:99:36
   │
99 │         self._transfer(msg.sender, to, value)
   │                                    ^^ attributes hash: 16804606599831072828
   │
   = ExpressionAttributes {
         typ: Base(
             Address,
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:99:40
   │
99 │         self._transfer(msg.sender, to, value)
   │                                        ^^^^^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ demos/uniswap.fe:99:9
   │
99 │         self._transfer(msg.sender, to, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
   │
   = ExpressionAttributes {
         typ: Base(
             Unit,
         ),
         location: Value,
         move_location: None,
     }

note: 
    ┌─ demos/uniswap.fe:100:16
    │
100 │         return true
    │                ^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:103:16
    │
103 │         assert self.allowances[from][msg.sender] >= value
    │                ^^^^^^^^^^^^^^^ attributes hash: 12706141037245906298
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Map(
                      Map {
                          key: Address,
                          value: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  1,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:103:32
    │
103 │         assert self.allowances[from][msg.sender] >= value
    │                                ^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:103:16
    │
103 │         assert self.allowances[from][msg.sender] >= value
    │                ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13465984430266063783
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:103:38
    │
103 │         assert self.allowances[from][msg.sender] >= value
    │                                      ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:103:16
    │
103 │         assert self.allowances[from][msg.sender] >= value
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: None,
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:103:53
    │
103 │         assert self.allowances[from][msg.sender] >= value
    │                                                     ^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:103:16
    │
103 │         assert self.allowances[from][msg.sender] >= value
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:9
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │         ^^^^^^^^^^^^^^^ attributes hash: 12706141037245906298
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Map(
                      Map {
                          key: Address,
                          value: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  1,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:25
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                         ^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:9
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │         ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13465984430266063783
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:31
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                               ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:9
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 6410008273718378934
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:45
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                                             ^^^^^^^^^^^^^^^ attributes hash: 12706141037245906298
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Map(
                      Map {
                          key: Address,
                          value: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  1,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:61
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                                                             ^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:45
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                                             ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13465984430266063783
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:67
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                                                                   ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:45
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: None,
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:105:81
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                                                                                 ^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:105:45
    │
105 │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
    │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:106:24
    │
106 │         self._transfer(from, to, value)
    │                        ^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:106:30
    │
106 │         self._transfer(from, to, value)
    │                              ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:106:34
    │
106 │         self._transfer(from, to, value)
    │                                  ^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:106:9
    │
106 │         self._transfer(from, to, value)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:107:16
    │
107 │         return true
    │                ^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:110:16
    │
110 │         return self.balances[account]
    │                ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  0,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:110:30
    │
110 │         return self.balances[account]
    │                              ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:110:16
    │
110 │         return self.balances[account]
    │                ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: None,
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:113:17
    │
113 │         return (self.reserve0, self.reserve1, self.block_timestamp_last)
    │                 ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:113:32
    │
113 │         return (self.reserve0, self.reserve1, self.block_timestamp_last)
    │                                ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:113:47
    │
113 │         return (self.reserve0, self.reserve1, self.block_timestamp_last)
    │                                               ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 17531369679390872666
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  9,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:113:16
    │
113 │         return (self.reserve0, self.reserve1, self.block_timestamp_last)
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 17273461609001584634
    │
    = ExpressionAttributes {
          typ: Tuple(
              Tuple {
                  items: [
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  ],
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:118:16
    │
118 │         assert msg.sender == self.factory, "UniswapV2: FORBIDDEN"
    │                ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:118:30
    │
118 │         assert msg.sender == self.factory, "UniswapV2: FORBIDDEN"
    │                              ^^^^^^^^^^^^ attributes hash: 5981090452764355831
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  4,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:118:16
    │
118 │         assert msg.sender == self.factory, "UniswapV2: FORBIDDEN"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:118:44
    │
118 │         assert msg.sender == self.factory, "UniswapV2: FORBIDDEN"
    │                                            ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 8844031981326649224
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 20,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:119:9
    │
119 │         self.token0 = token0
    │         ^^^^^^^^^^^ attributes hash: 14968676409397674990
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  5,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:119:23
    │
119 │         self.token0 = token0
    │                       ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:120:9
    │
120 │         self.token1 = token1
    │         ^^^^^^^^^^^ attributes hash: 15840677737065872539
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  6,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:120:23
    │
120 │         self.token1 = token1
    │                       ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:125:33
    │
125 │         block_timestamp: u256 = block.timestamp % 2**32
    │                                 ^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:125:51
    │
125 │         block_timestamp: u256 = block.timestamp % 2**32
    │                                                   ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:125:54
    │
125 │         block_timestamp: u256 = block.timestamp % 2**32
    │                                                      ^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:125:51
    │
125 │         block_timestamp: u256 = block.timestamp % 2**32
    │                                                   ^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:125:33
    │
125 │         block_timestamp: u256 = block.timestamp % 2**32
    │                                 ^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:127:30
    │
127 │         time_elapsed: u256 = block_timestamp - self.block_timestamp_last # overflow is desired
    │                              ^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:127:48
    │
127 │         time_elapsed: u256 = block_timestamp - self.block_timestamp_last # overflow is desired
    │                                                ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 17531369679390872666
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  9,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:127:30
    │
127 │         time_elapsed: u256 = block_timestamp - self.block_timestamp_last # overflow is desired
    │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:12
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │            ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:27
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │                           ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:12
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │            ^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:33
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │                                 ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:45
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │                                             ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:33
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │                                 ^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:12
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:51
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │                                                   ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:63
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │                                                               ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:51
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │                                                   ^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:128:12
    │
128 │         if time_elapsed > 0 and reserve0 != 0 and reserve1 != 0:
    │            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:130:13
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4310264921137398469
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  10,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:130:43
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13777045717998063784
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  10,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:130:74
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │                                                                          ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:130:85
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │                                                                                     ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:130:73
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │                                                                         ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:130:97
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │                                                                                                 ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:130:73
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:130:43
    │
130 │             self.price0_cumulative_last = self.price0_cumulative_last + (reserve1 / reserve0) * time_elapsed
    │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:131:13
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 412365985568990476
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  11,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:131:43
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 15416606894430180403
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  11,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:131:74
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │                                                                          ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:131:85
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │                                                                                     ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:131:73
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │                                                                         ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:131:97
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │                                                                                                 ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:131:73
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:131:43
    │
131 │             self.price1_cumulative_last = self.price1_cumulative_last + (reserve0 / reserve1) * time_elapsed
    │                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:133:9
    │
133 │         self.reserve0 = balance0
    │         ^^^^^^^^^^^^^ attributes hash: 1762504765161917383
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:133:25
    │
133 │         self.reserve0 = balance0
    │                         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:134:9
    │
134 │         self.reserve1 = balance1
    │         ^^^^^^^^^^^^^ attributes hash: 15081282488029354126
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:134:25
    │
134 │         self.reserve1 = balance1
    │                         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:135:9
    │
135 │         self.block_timestamp_last = block_timestamp
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 17408412876866833752
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  9,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:135:37
    │
135 │         self.block_timestamp_last = block_timestamp
    │                                     ^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:136:28
    │
136 │         emit Sync(reserve0=self.reserve0, reserve1=self.reserve1)
    │                            ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:136:52
    │
136 │         emit Sync(reserve0=self.reserve0, reserve1=self.reserve1)
    │                                                    ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:140:44
    │
140 │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
    │                                            ^^^^^^^^^^^^ attributes hash: 5981090452764355831
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  4,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:140:27
    │
140 │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 157964532376350875
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Factory",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "all_pairs_length",
                          params: [],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "create_pair",
                          params: [
                              (
                                  "token_a",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token_b",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "fee_to",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "fee_to_setter",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "set_fee_to",
                          params: [
                              (
                                  "fee_to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "set_fee_to_setter",
                          params: [
                              (
                                  "fee_to_setter",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:140:27
    │
140 │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:141:24
    │
141 │         fee_on: bool = fee_to != address(0)
    │                        ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:141:42
    │
141 │         fee_on: bool = fee_to != address(0)
    │                                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:141:34
    │
141 │         fee_on: bool = fee_to != address(0)
    │                                  ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:141:24
    │
141 │         fee_on: bool = fee_to != address(0)
    │                        ^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:142:24
    │
142 │         k_last: u256 = self.k_last # gas savings
    │                        ^^^^^^^^^^^ attributes hash: 2474608730138455518
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  12,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:143:12
    │
143 │         if fee_on:
    │            ^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:144:16
    │
144 │             if k_last != 0:
    │                ^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:144:26
    │
144 │             if k_last != 0:
    │                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:144:16
    │
144 │             if k_last != 0:
    │                ^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:145:42
    │
145 │                 root_k: u256 = self.sqrt(reserve0 * reserve1)
    │                                          ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:145:53
    │
145 │                 root_k: u256 = self.sqrt(reserve0 * reserve1)
    │                                                     ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:145:42
    │
145 │                 root_k: u256 = self.sqrt(reserve0 * reserve1)
    │                                          ^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:145:32
    │
145 │                 root_k: u256 = self.sqrt(reserve0 * reserve1)
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:146:47
    │
146 │                 root_k_last: u256 = self.sqrt(k_last)
    │                                               ^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:146:37
    │
146 │                 root_k_last: u256 = self.sqrt(k_last)
    │                                     ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:147:20
    │
147 │                 if root_k > root_k_last:
    │                    ^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:147:29
    │
147 │                 if root_k > root_k_last:
    │                             ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:147:20
    │
147 │                 if root_k > root_k_last:
    │                    ^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:148:39
    │
148 │                     numerator: u256 = self.total_supply * root_k - root_k_last
    │                                       ^^^^^^^^^^^^^^^^^ attributes hash: 2554289623849491432
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  2,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:148:59
    │
148 │                     numerator: u256 = self.total_supply * root_k - root_k_last
    │                                                           ^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:148:39
    │
148 │                     numerator: u256 = self.total_supply * root_k - root_k_last
    │                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:148:68
    │
148 │                     numerator: u256 = self.total_supply * root_k - root_k_last
    │                                                                    ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:148:39
    │
148 │                     numerator: u256 = self.total_supply * root_k - root_k_last
    │                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:149:41
    │
149 │                     denominator: u256 = root_k * 5 + root_k_last
    │                                         ^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:149:50
    │
149 │                     denominator: u256 = root_k * 5 + root_k_last
    │                                                  ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:149:41
    │
149 │                     denominator: u256 = root_k * 5 + root_k_last
    │                                         ^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:149:54
    │
149 │                     denominator: u256 = root_k * 5 + root_k_last
    │                                                      ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:149:41
    │
149 │                     denominator: u256 = root_k * 5 + root_k_last
    │                                         ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:150:39
    │
150 │                     liquidity: u256 = numerator / denominator
    │                                       ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:150:51
    │
150 │                     liquidity: u256 = numerator / denominator
    │                                                   ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:150:39
    │
150 │                     liquidity: u256 = numerator / denominator
    │                                       ^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:151:24
    │
151 │                     if liquidity > 0:
    │                        ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:151:36
    │
151 │                     if liquidity > 0:
    │                                    ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:151:24
    │
151 │                     if liquidity > 0:
    │                        ^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:152:36
    │
152 │                         self._mint(fee_to, liquidity)
    │                                    ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:152:44
    │
152 │                         self._mint(fee_to, liquidity)
    │                                            ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:152:25
    │
152 │                         self._mint(fee_to, liquidity)
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:153:14
    │
153 │         elif k_last != 0:
    │              ^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:153:24
    │
153 │         elif k_last != 0:
    │                        ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:153:14
    │
153 │         elif k_last != 0:
    │              ^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:154:13
    │
154 │             self.k_last = 0
    │             ^^^^^^^^^^^ attributes hash: 18423914934454245840
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  12,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:154:27
    │
154 │             self.k_last = 0
    │                           ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:156:16
    │
156 │         return fee_on
    │                ^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:160:35
    │
160 │         MINIMUM_LIQUIDITY: u256 = 1000
    │                                   ^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:161:26
    │
161 │         reserve0: u256 = self.reserve0
    │                          ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:162:26
    │
162 │         reserve1: u256 = self.reserve1
    │                          ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:163:32
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │                                ^^^^^^^^^^^ attributes hash: 11487989211214973446
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  5,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:163:26
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:163:55
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │                                                       ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:163:26
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:164:32
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │                                ^^^^^^^^^^^ attributes hash: 1129018936215820185
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  6,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:164:26
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:164:55
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │                                                       ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:164:26
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:165:25
    │
165 │         amount0: u256 = balance0 - self.reserve0
    │                         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:165:36
    │
165 │         amount0: u256 = balance0 - self.reserve0
    │                                    ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:165:25
    │
165 │         amount0: u256 = balance0 - self.reserve0
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:166:25
    │
166 │         amount1: u256 = balance1 - self.reserve1
    │                         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:166:36
    │
166 │         amount1: u256 = balance1 - self.reserve1
    │                                    ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:166:25
    │
166 │         amount1: u256 = balance1 - self.reserve1
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:168:39
    │
168 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                                       ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:168:49
    │
168 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                                                 ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:168:24
    │
168 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:169:30
    │
169 │         total_supply: u256 = self.total_supply # gas savings, must be defined here since totalSupply can update in _mintFee
    │                              ^^^^^^^^^^^^^^^^^ attributes hash: 2554289623849491432
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  2,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:170:27
    │
170 │         liquidity: u256 = 0
    │                           ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:171:12
    │
171 │         if total_supply == 0:
    │            ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:171:28
    │
171 │         if total_supply == 0:
    │                            ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:171:12
    │
171 │         if total_supply == 0:
    │            ^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:172:13
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │             ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:172:35
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │                                   ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:172:45
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │                                             ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:172:35
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │                                   ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:172:25
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:172:56
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │                                                        ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:172:25
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:173:32
    │
173 │             self._mint(address(0), MINIMUM_LIQUIDITY) # permanently lock the first MINIMUM_LIQUIDITY tokens
    │                                ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:173:24
    │
173 │             self._mint(address(0), MINIMUM_LIQUIDITY) # permanently lock the first MINIMUM_LIQUIDITY tokens
    │                        ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:173:36
    │
173 │             self._mint(address(0), MINIMUM_LIQUIDITY) # permanently lock the first MINIMUM_LIQUIDITY tokens
    │                                    ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:173:13
    │
173 │             self._mint(address(0), MINIMUM_LIQUIDITY) # permanently lock the first MINIMUM_LIQUIDITY tokens
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:13
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │             ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:35
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                   ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:45
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                             ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:34
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                  ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:61
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                                             ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:34
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:72
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                                                        ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:82
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                                                                  ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:71
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:98
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                                                                                  ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:71
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:175:25
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:177:16
    │
177 │         assert liquidity > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
    │                ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:177:28
    │
177 │         assert liquidity > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
    │                            ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:177:16
    │
177 │         assert liquidity > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
    │                ^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:177:31
    │
177 │         assert liquidity > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
    │                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5150303293677401146
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 40,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:179:20
    │
179 │         self._mint(to, liquidity)
    │                    ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:179:24
    │
179 │         self._mint(to, liquidity)
    │                        ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:179:9
    │
179 │         self._mint(to, liquidity)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:180:22
    │
180 │         self._update(balance0, balance1, reserve0, reserve1)
    │                      ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:180:32
    │
180 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:180:42
    │
180 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                          ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:180:52
    │
180 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                                    ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:180:9
    │
180 │         self._update(balance0, balance1, reserve0, reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:182:12
    │
182 │         if fee_on:
    │            ^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:183:13
    │
183 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │             ^^^^^^^^^^^ attributes hash: 18423914934454245840
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  12,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:183:27
    │
183 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │                           ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:183:38
    │
183 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │                                      ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:183:27
    │
183 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │                           ^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:185:26
    │
185 │         emit Mint(sender=msg.sender, amount0, amount1)
    │                          ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:185:38
    │
185 │         emit Mint(sender=msg.sender, amount0, amount1)
    │                                      ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:185:47
    │
185 │         emit Mint(sender=msg.sender, amount0, amount1)
    │                                               ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:186:16
    │
186 │         return liquidity
    │                ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:190:26
    │
190 │         reserve0: u256 = self.reserve0
    │                          ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:191:26
    │
191 │         reserve1: u256 = self.reserve1
    │                          ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:192:31
    │
192 │         token0: ERC20 = ERC20(self.token0)
    │                               ^^^^^^^^^^^ attributes hash: 11487989211214973446
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  5,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:192:25
    │
192 │         token0: ERC20 = ERC20(self.token0)
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:193:31
    │
193 │         token1: ERC20 = ERC20(self.token1)
    │                               ^^^^^^^^^^^ attributes hash: 1129018936215820185
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  6,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:193:25
    │
193 │         token1: ERC20 = ERC20(self.token1)
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:194:26
    │
194 │         balance0: u256 = token0.balanceOf(self.address)
    │                          ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:194:43
    │
194 │         balance0: u256 = token0.balanceOf(self.address)
    │                                           ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:194:26
    │
194 │         balance0: u256 = token0.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:195:26
    │
195 │         balance1: u256 = token1.balanceOf(self.address)
    │                          ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:195:43
    │
195 │         balance1: u256 = token1.balanceOf(self.address)
    │                                           ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:195:26
    │
195 │         balance1: u256 = token1.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:196:27
    │
196 │         liquidity: u256 = self.balances[self.address]
    │                           ^^^^^^^^^^^^^ attributes hash: 8181649302427358374
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  0,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:196:41
    │
196 │         liquidity: u256 = self.balances[self.address]
    │                                         ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:196:27
    │
196 │         liquidity: u256 = self.balances[self.address]
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 2750573035226013709
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: None,
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:198:39
    │
198 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                                       ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:198:49
    │
198 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                                                 ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:198:24
    │
198 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:199:30
    │
199 │         total_supply: u256 = self.total_supply # gas savings, must be defined here since total_supply can update in _mintFee
    │                              ^^^^^^^^^^^^^^^^^ attributes hash: 2554289623849491432
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  2,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:200:26
    │
200 │         amount0: u256 = (liquidity * balance0) / total_supply # using balances ensures pro-rata distribution
    │                          ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:200:38
    │
200 │         amount0: u256 = (liquidity * balance0) / total_supply # using balances ensures pro-rata distribution
    │                                      ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:200:25
    │
200 │         amount0: u256 = (liquidity * balance0) / total_supply # using balances ensures pro-rata distribution
    │                         ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:200:50
    │
200 │         amount0: u256 = (liquidity * balance0) / total_supply # using balances ensures pro-rata distribution
    │                                                  ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:200:25
    │
200 │         amount0: u256 = (liquidity * balance0) / total_supply # using balances ensures pro-rata distribution
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:201:26
    │
201 │         amount1: u256 = (liquidity * balance1) / total_supply # using balances ensures pro-rata distribution
    │                          ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:201:38
    │
201 │         amount1: u256 = (liquidity * balance1) / total_supply # using balances ensures pro-rata distribution
    │                                      ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:201:25
    │
201 │         amount1: u256 = (liquidity * balance1) / total_supply # using balances ensures pro-rata distribution
    │                         ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:201:50
    │
201 │         amount1: u256 = (liquidity * balance1) / total_supply # using balances ensures pro-rata distribution
    │                                                  ^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:201:25
    │
201 │         amount1: u256 = (liquidity * balance1) / total_supply # using balances ensures pro-rata distribution
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:16
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:26
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:16
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                ^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:32
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                                ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:42
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:32
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                                ^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:16
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:202:45
    │
202 │         assert amount0 > 0 and amount1 > 0, "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
    │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5150303293677401146
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 40,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:203:20
    │
203 │         self._burn(self.address, liquidity)
    │                    ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:203:34
    │
203 │         self._burn(self.address, liquidity)
    │                                  ^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:203:9
    │
203 │         self._burn(self.address, liquidity)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:204:9
    │
204 │         token0.transfer(to, amount0)
    │         ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:204:25
    │
204 │         token0.transfer(to, amount0)
    │                         ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:204:29
    │
204 │         token0.transfer(to, amount0)
    │                             ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:204:9
    │
204 │         token0.transfer(to, amount0)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:205:9
    │
205 │         token1.transfer(to, amount1)
    │         ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:205:25
    │
205 │         token1.transfer(to, amount1)
    │                         ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:205:29
    │
205 │         token1.transfer(to, amount1)
    │                             ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:205:9
    │
205 │         token1.transfer(to, amount1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:206:9
    │
206 │         balance0 = token0.balanceOf(self.address)
    │         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:206:20
    │
206 │         balance0 = token0.balanceOf(self.address)
    │                    ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:206:37
    │
206 │         balance0 = token0.balanceOf(self.address)
    │                                     ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:206:20
    │
206 │         balance0 = token0.balanceOf(self.address)
    │                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:207:9
    │
207 │         balance1 = token1.balanceOf(self.address)
    │         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:207:20
    │
207 │         balance1 = token1.balanceOf(self.address)
    │                    ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:207:37
    │
207 │         balance1 = token1.balanceOf(self.address)
    │                                     ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:207:20
    │
207 │         balance1 = token1.balanceOf(self.address)
    │                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:209:22
    │
209 │         self._update(balance0, balance1, reserve0, reserve1)
    │                      ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:209:32
    │
209 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:209:42
    │
209 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                          ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:209:52
    │
209 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                                    ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:209:9
    │
209 │         self._update(balance0, balance1, reserve0, reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:211:12
    │
211 │         if fee_on:
    │            ^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:212:13
    │
212 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │             ^^^^^^^^^^^ attributes hash: 18423914934454245840
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  12,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:212:27
    │
212 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │                           ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:212:38
    │
212 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │                                      ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:212:27
    │
212 │             self.k_last = reserve0 * reserve1 # reserve0 and reserve1 are up-to-date
    │                           ^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:214:26
    │
214 │         emit Burn(sender=msg.sender, amount0, amount1, to)
    │                          ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:214:38
    │
214 │         emit Burn(sender=msg.sender, amount0, amount1, to)
    │                                      ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:214:47
    │
214 │         emit Burn(sender=msg.sender, amount0, amount1, to)
    │                                               ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:214:56
    │
214 │         emit Burn(sender=msg.sender, amount0, amount1, to)
    │                                                        ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:215:17
    │
215 │         return (amount0, amount1)
    │                 ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:215:26
    │
215 │         return (amount0, amount1)
    │                          ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:215:16
    │
215 │         return (amount0, amount1)
    │                ^^^^^^^^^^^^^^^^^^ attributes hash: 14223998369702365976
    │
    = ExpressionAttributes {
          typ: Tuple(
              Tuple {
                  items: [
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  ],
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:16
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:30
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                              ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:16
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                ^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:35
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                                   ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:49
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                                                 ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:35
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                                   ^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:16
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:221:52
    │
221 │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
    │                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 3219047263978030786
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 37,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:222:26
    │
222 │         reserve0: u256 = self.reserve0
    │                          ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:223:26
    │
223 │         reserve1: u256 = self.reserve1
    │                          ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:224:16
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:224:30
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                              ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:224:16
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:224:43
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                                           ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:224:57
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                                                         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:224:43
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                                           ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:224:16
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:224:67
    │
224 │         assert amount0_out < reserve0 and amount1_out < reserve1, "UniswapV2: INSUFFICIENT_LIQUIDITY"
    │                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 12085589151663124930
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 33,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:226:31
    │
226 │         token0: ERC20 = ERC20(self.token0)
    │                               ^^^^^^^^^^^ attributes hash: 11487989211214973446
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  5,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:226:25
    │
226 │         token0: ERC20 = ERC20(self.token0)
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:227:31
    │
227 │         token1: ERC20 = ERC20(self.token1)
    │                               ^^^^^^^^^^^ attributes hash: 1129018936215820185
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  6,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:227:25
    │
227 │         token1: ERC20 = ERC20(self.token1)
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:16
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:30
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                              ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:22
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                      ^^^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:16
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:42
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                                          ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:56
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                                                        ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:48
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                                                ^^^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:42
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                                          ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:16
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:230:65
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                                                                 ^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 12771357017486508544
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 21,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:232:12
    │
232 │         if amount0_out > 0:
    │            ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:232:26
    │
232 │         if amount0_out > 0:
    │                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:232:12
    │
232 │         if amount0_out > 0:
    │            ^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:233:13
    │
233 │             token0.transfer(to, amount0_out) # optimistically transfer tokens
    │             ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:233:29
    │
233 │             token0.transfer(to, amount0_out) # optimistically transfer tokens
    │                             ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:233:33
    │
233 │             token0.transfer(to, amount0_out) # optimistically transfer tokens
    │                                 ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:233:13
    │
233 │             token0.transfer(to, amount0_out) # optimistically transfer tokens
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:234:12
    │
234 │         if amount1_out > 0:
    │            ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:234:26
    │
234 │         if amount1_out > 0:
    │                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:234:12
    │
234 │         if amount1_out > 0:
    │            ^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:235:13
    │
235 │             token1.transfer(to, amount1_out) # optimistically transfer tokens
    │             ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:235:29
    │
235 │             token1.transfer(to, amount1_out) # optimistically transfer tokens
    │                             ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:235:33
    │
235 │             token1.transfer(to, amount1_out) # optimistically transfer tokens
    │                                 ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:235:13
    │
235 │             token1.transfer(to, amount1_out) # optimistically transfer tokens
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:240:26
    │
240 │         balance0: u256 = token0.balanceOf(self.address)
    │                          ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:240:43
    │
240 │         balance0: u256 = token0.balanceOf(self.address)
    │                                           ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:240:26
    │
240 │         balance0: u256 = token0.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:241:26
    │
241 │         balance1: u256 = token1.balanceOf(self.address)
    │                          ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:241:43
    │
241 │         balance1: u256 = token1.balanceOf(self.address)
    │                                           ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:241:26
    │
241 │         balance1: u256 = token1.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:67
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                                                   ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:78
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                                                              ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:89
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                                                                         ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:78
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                                                              ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:67
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:28
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                            ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:40
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                        ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:51
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                                   ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:39
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                       ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:28
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:106
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                                                                                                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:243:28
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:67
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                                                   ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:78
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                                                              ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:89
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                                                                         ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:78
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                                                              ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:67
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:28
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                            ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:40
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                        ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:51
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                                   ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:39
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                       ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:28
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:106
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                                                                                                          ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:244:28
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:16
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                ^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:29
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                             ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:16
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                ^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:34
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                                  ^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:47
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                                               ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:34
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                                  ^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:16
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:246:50
    │
246 │         assert amount0_in > 0 or amount1_in > 0, "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
    │                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 12511892630771576143
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 36,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:248:35
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                                   ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:248:46
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                                              ^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:248:35
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                                   ^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:248:53
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                                                     ^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:248:66
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                                                                  ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:248:53
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                                                     ^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:248:35
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:249:35
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                                   ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:249:46
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                                              ^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:249:35
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                                   ^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:249:53
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                                                     ^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:249:66
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                                                                  ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:249:53
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                                                     ^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:249:35
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:16
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:36
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                                    ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:16
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:57
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                                                         ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:68
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                                                                    ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:57
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                                                         ^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:79
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                                                                               ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:57
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:16
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:251:88
    │
251 │         assert balance0_adjusted * balance1_adjusted >= reserve0 * reserve1 * 1000000, "UniswapV2: K"
    │                                                                                        ^^^^^^^^^^^^^^ attributes hash: 8183464103194293185
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 12,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:253:22
    │
253 │         self._update(balance0, balance1, reserve0, reserve1)
    │                      ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:253:32
    │
253 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:253:42
    │
253 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                          ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:253:52
    │
253 │         self._update(balance0, balance1, reserve0, reserve1)
    │                                                    ^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:253:9
    │
253 │         self._update(balance0, balance1, reserve0, reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:254:26
    │
254 │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │                          ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:254:38
    │
254 │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │                                      ^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:254:50
    │
254 │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │                                                  ^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:254:62
    │
254 │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │                                                              ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:254:75
    │
254 │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │                                                                           ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:254:88
    │
254 │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │                                                                                        ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:258:31
    │
258 │         token0: ERC20 = ERC20(self.token0) # gas savings
    │                               ^^^^^^^^^^^ attributes hash: 11487989211214973446
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  5,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:258:25
    │
258 │         token0: ERC20 = ERC20(self.token0) # gas savings
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:259:31
    │
259 │         token1: ERC20 = ERC20(self.token1) # gas savings
    │                               ^^^^^^^^^^^ attributes hash: 1129018936215820185
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  6,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:259:25
    │
259 │         token1: ERC20 = ERC20(self.token1) # gas savings
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:261:9
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │         ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:261:25
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │                         ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:261:29
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │                             ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:261:46
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │                                              ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:261:29
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:261:62
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │                                                              ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:261:29
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:261:9
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:262:9
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │         ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:262:25
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │                         ^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:262:29
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │                             ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:262:46
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │                                              ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:262:29
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:262:62
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │                                                              ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:262:29
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:262:9
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:266:31
    │
266 │         token0: ERC20 = ERC20(self.token0)
    │                               ^^^^^^^^^^^ attributes hash: 11487989211214973446
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  5,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:266:25
    │
266 │         token0: ERC20 = ERC20(self.token0)
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:267:31
    │
267 │         token1: ERC20 = ERC20(self.token1)
    │                               ^^^^^^^^^^^ attributes hash: 1129018936215820185
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  6,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:267:25
    │
267 │         token1: ERC20 = ERC20(self.token1)
    │                         ^^^^^^^^^^^^^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:268:22
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                      ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:268:39
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                                       ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:268:22
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:268:54
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                                                      ^^^^^^ attributes hash: 10894839123336916706
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:268:71
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                                                                       ^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:268:54
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:268:86
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                                                                                      ^^^^^^^^^^^^^ attributes hash: 7054095648196370269
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  7,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:268:101
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                                                                                                     ^^^^^^^^^^^^^ attributes hash: 11081042053253607771
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  8,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:268:9
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:272:13
    │
272 │         if (val > 3):
    │             ^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:272:19
    │
272 │         if (val > 3):
    │                   ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:272:12
    │
272 │         if (val > 3):
    │            ^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:273:13
    │
273 │             z = val
    │             ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:273:17
    │
273 │             z = val
    │                 ^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:274:23
    │
274 │             x: u256 = val / 2 + 1
    │                       ^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:274:29
    │
274 │             x: u256 = val / 2 + 1
    │                             ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:274:23
    │
274 │             x: u256 = val / 2 + 1
    │                       ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:274:33
    │
274 │             x: u256 = val / 2 + 1
    │                                 ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:274:23
    │
274 │             x: u256 = val / 2 + 1
    │                       ^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:275:20
    │
275 │             while (x < z):
    │                    ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:275:24
    │
275 │             while (x < z):
    │                        ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:275:19
    │
275 │             while (x < z):
    │                   ^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:276:17
    │
276 │                 z = x
    │                 ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:276:21
    │
276 │                 z = x
    │                     ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:17
    │
277 │                 x = (val / x + x) / 2
    │                 ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:22
    │
277 │                 x = (val / x + x) / 2
    │                      ^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:28
    │
277 │                 x = (val / x + x) / 2
    │                            ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:22
    │
277 │                 x = (val / x + x) / 2
    │                      ^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:32
    │
277 │                 x = (val / x + x) / 2
    │                                ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:21
    │
277 │                 x = (val / x + x) / 2
    │                     ^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:37
    │
277 │                 x = (val / x + x) / 2
    │                                     ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:277:21
    │
277 │                 x = (val / x + x) / 2
    │                     ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:278:15
    │
278 │         elif (val != 0):
    │               ^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:278:22
    │
278 │         elif (val != 0):
    │                      ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:278:14
    │
278 │         elif (val != 0):
    │              ^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:279:13
    │
279 │             z = 1
    │             ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:279:17
    │
279 │             z = 1
    │                 ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:280:16
    │
280 │         return z
    │                ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:283:21
    │
283 │         return x if x < y else y
    │                     ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:283:25
    │
283 │         return x if x < y else y
    │                         ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:283:21
    │
283 │         return x if x < y else y
    │                     ^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:283:16
    │
283 │         return x if x < y else y
    │                ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:283:32
    │
283 │         return x if x < y else y
    │                                ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:283:16
    │
283 │         return x if x < y else y
    │                ^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:301:8
    │
301 │        self.fee_to_setter = fee_to_setter
    │        ^^^^^^^^^^^^^^^^^^ attributes hash: 7719841324520924833
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  1,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:301:29
    │
301 │        self.fee_to_setter = fee_to_setter
    │                             ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:304:16
    │
304 │         return self.fee_to
    │                ^^^^^^^^^^^ attributes hash: 9912359180589056231
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  0,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:307:16
    │
307 │         return self.fee_to_setter
    │                ^^^^^^^^^^^^^^^^^^ attributes hash: 572772117689188445
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  1,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:310:16
    │
310 │         return self.pair_counter
    │                ^^^^^^^^^^^^^^^^^ attributes hash: 15640157567661573660
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  4,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:313:16
    │
313 │         assert token_a != token_b, "UniswapV2: IDENTICAL_ADDRESSES"
    │                ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:313:27
    │
313 │         assert token_a != token_b, "UniswapV2: IDENTICAL_ADDRESSES"
    │                           ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:313:16
    │
313 │         assert token_a != token_b, "UniswapV2: IDENTICAL_ADDRESSES"
    │                ^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:313:36
    │
313 │         assert token_a != token_b, "UniswapV2: IDENTICAL_ADDRESSES"
    │                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 961035903734654435
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 30,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:315:38
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │                                      ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:315:48
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │                                                ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:315:38
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │                                      ^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:315:27
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │                           ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:315:61
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │                                                             ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:315:27
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:316:38
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │                                      ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:316:48
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │                                                ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:316:38
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │                                      ^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:316:27
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │                           ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:316:61
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │                                                             ^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:316:27
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:317:16
    │
317 │         assert token0 != address(0), "UniswapV2: ZERO_ADDRESS"
    │                ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:317:34
    │
317 │         assert token0 != address(0), "UniswapV2: ZERO_ADDRESS"
    │                                  ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:317:26
    │
317 │         assert token0 != address(0), "UniswapV2: ZERO_ADDRESS"
    │                          ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:317:16
    │
317 │         assert token0 != address(0), "UniswapV2: ZERO_ADDRESS"
    │                ^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:317:38
    │
317 │         assert token0 != address(0), "UniswapV2: ZERO_ADDRESS"
    │                                      ^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1441825866167164291
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 23,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:16
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                ^^^^^^^^^^ attributes hash: 12072606026925364808
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Map(
                      Map {
                          key: Address,
                          value: Base(
                              Address,
                          ),
                      },
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  2,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:27
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                           ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:16
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                ^^^^^^^^^^^^^^^^^^ attributes hash: 10500507982785967247
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Address,
                  ),
              },
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:35
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                                   ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:16
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 10672237277138210964
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: None,
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:318:54
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                                                      ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:46
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                                              ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:16
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:318:58
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                                                          ^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4490052067030513115
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 22,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:320:33
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │                                 ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:320:41
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │                                         ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:320:32
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │                                ^^^^^^^^^^^^^^^^ attributes hash: 6497436462180543387
    │
    = ExpressionAttributes {
          typ: Tuple(
              Tuple {
                  items: [
                      Base(
                          Address,
                      ),
                      Base(
                          Address,
                      ),
                  ],
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:320:32
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1260571604047009382
    │
    = ExpressionAttributes {
          typ: Array(
              Array {
                  size: 64,
                  inner: Numeric(
                      U8,
                  ),
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:320:22
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:321:53
    │
321 │         pair: UniswapV2Pair = UniswapV2Pair.create2(0, salt)
    │                                                     ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:321:56
    │
321 │         pair: UniswapV2Pair = UniswapV2Pair.create2(0, salt)
    │                                                        ^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:321:31
    │
321 │         pair: UniswapV2Pair = UniswapV2Pair.create2(0, salt)
    │                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13198149570721490243
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:322:9
    │
322 │         pair.initialize(token0, token1)
    │         ^^^^ attributes hash: 13198149570721490243
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:322:25
    │
322 │         pair.initialize(token0, token1)
    │                         ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:322:33
    │
322 │         pair.initialize(token0, token1)
    │                                 ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:322:9
    │
322 │         pair.initialize(token0, token1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4703226498732669424
    │
    = ExpressionAttributes {
          typ: Base(
              Unit,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:324:9
    │
324 │         self.pairs[token0][token1] = address(pair)
    │         ^^^^^^^^^^ attributes hash: 12072606026925364808
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Map(
                      Map {
                          key: Address,
                          value: Base(
                              Address,
                          ),
                      },
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  2,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:324:20
    │
324 │         self.pairs[token0][token1] = address(pair)
    │                    ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:324:9
    │
324 │         self.pairs[token0][token1] = address(pair)
    │         ^^^^^^^^^^^^^^^^^^ attributes hash: 10500507982785967247
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Address,
                  ),
              },
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:324:28
    │
324 │         self.pairs[token0][token1] = address(pair)
    │                            ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:324:9
    │
324 │         self.pairs[token0][token1] = address(pair)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 10479918861468432226
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:324:46
    │
324 │         self.pairs[token0][token1] = address(pair)
    │                                              ^^^^ attributes hash: 13198149570721490243
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:324:38
    │
324 │         self.pairs[token0][token1] = address(pair)
    │                                      ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:325:9
    │
325 │         self.pairs[token1][token0] = address(pair)
    │         ^^^^^^^^^^ attributes hash: 12072606026925364808
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Map(
                      Map {
                          key: Address,
                          value: Base(
                              Address,
                          ),
                      },
                  ),
              },
          ),
          location: Storage {
              nonce: Some(
                  2,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:325:20
    │
325 │         self.pairs[token1][token0] = address(pair)
    │                    ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:325:9
    │
325 │         self.pairs[token1][token0] = address(pair)
    │         ^^^^^^^^^^^^^^^^^^ attributes hash: 10500507982785967247
    │
    = ExpressionAttributes {
          typ: Map(
              Map {
                  key: Address,
                  value: Base(
                      Address,
                  ),
              },
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:325:28
    │
325 │         self.pairs[token1][token0] = address(pair)
    │                            ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:325:9
    │
325 │         self.pairs[token1][token0] = address(pair)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 10479918861468432226
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:325:46
    │
325 │         self.pairs[token1][token0] = address(pair)
    │                                              ^^^^ attributes hash: 13198149570721490243
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:325:38
    │
325 │         self.pairs[token1][token0] = address(pair)
    │                                      ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:326:9
    │
326 │         self.all_pairs[self.pair_counter] = address(pair)
    │         ^^^^^^^^^^^^^^ attributes hash: 15136239115793828783
    │
    = ExpressionAttributes {
          typ: Array(
              Array {
                  size: 100,
                  inner: Address,
              },
          ),
          location: Storage {
              nonce: Some(
                  3,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:326:24
    │
326 │         self.all_pairs[self.pair_counter] = address(pair)
    │                        ^^^^^^^^^^^^^^^^^ attributes hash: 15640157567661573660
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  4,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:326:9
    │
326 │         self.all_pairs[self.pair_counter] = address(pair)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 10479918861468432226
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: None,
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:326:53
    │
326 │         self.all_pairs[self.pair_counter] = address(pair)
    │                                                     ^^^^ attributes hash: 13198149570721490243
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:326:45
    │
326 │         self.all_pairs[self.pair_counter] = address(pair)
    │                                             ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:327:9
    │
327 │         self.pair_counter = self.pair_counter + 1
    │         ^^^^^^^^^^^^^^^^^ attributes hash: 12836504926144481741
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  4,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:327:29
    │
327 │         self.pair_counter = self.pair_counter + 1
    │                             ^^^^^^^^^^^^^^^^^ attributes hash: 15640157567661573660
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  4,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:327:49
    │
327 │         self.pair_counter = self.pair_counter + 1
    │                                                 ^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:327:29
    │
327 │         self.pair_counter = self.pair_counter + 1
    │                             ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 1230752710897721197
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:329:26
    │
329 │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
    │                          ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:329:34
    │
329 │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
    │                                  ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:329:55
    │
329 │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
    │                                                       ^^^^ attributes hash: 13198149570721490243
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:329:47
    │
329 │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
    │                                               ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:329:68
    │
329 │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
    │                                                                    ^^^^^^^^^^^^^^^^^ attributes hash: 15640157567661573660
    │
    = ExpressionAttributes {
          typ: Base(
              Numeric(
                  U256,
              ),
          ),
          location: Storage {
              nonce: Some(
                  4,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:330:24
    │
330 │         return address(pair)
    │                        ^^^^ attributes hash: 13198149570721490243
    │
    = ExpressionAttributes {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:330:16
    │
330 │         return address(pair)
    │                ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:333:16
    │
333 │         assert msg.sender == self.fee_to_setter, "UniswapV2: FORBIDDEN"
    │                ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:333:30
    │
333 │         assert msg.sender == self.fee_to_setter, "UniswapV2: FORBIDDEN"
    │                              ^^^^^^^^^^^^^^^^^^ attributes hash: 572772117689188445
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  1,
              ),
          },
          move_location: Some(
              Value,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:333:16
    │
333 │         assert msg.sender == self.fee_to_setter, "UniswapV2: FORBIDDEN"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:333:50
    │
333 │         assert msg.sender == self.fee_to_setter, "UniswapV2: FORBIDDEN"
    │                                                  ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 8844031981326649224
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 20,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:334:9
    │
334 │         self.fee_to = fee_to
    │         ^^^^^^^^^^^ attributes hash: 2913398255676486286
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  0,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:334:23
    │
334 │         self.fee_to = fee_to
    │                       ^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:337:16
    │
337 │         assert msg.sender == fee_to_setter, "UniswapV2: FORBIDDEN"
    │                ^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:337:30
    │
337 │         assert msg.sender == fee_to_setter, "UniswapV2: FORBIDDEN"
    │                              ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:337:16
    │
337 │         assert msg.sender == fee_to_setter, "UniswapV2: FORBIDDEN"
    │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 519621297275845584
    │
    = ExpressionAttributes {
          typ: Base(
              Bool,
          ),
          location: Value,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:337:45
    │
337 │         assert msg.sender == fee_to_setter, "UniswapV2: FORBIDDEN"
    │                                             ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 8844031981326649224
    │
    = ExpressionAttributes {
          typ: String(
              FeString {
                  max_size: 20,
              },
          ),
          location: Memory,
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:338:9
    │
338 │         self.fee_to_setter = fee_to_setter
    │         ^^^^^^^^^^^^^^^^^^ attributes hash: 7719841324520924833
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Storage {
              nonce: Some(
                  1,
              ),
          },
          move_location: None,
      }

note: 
    ┌─ demos/uniswap.fe:338:30
    │
338 │         self.fee_to_setter = fee_to_setter
    │                              ^^^^^^^^^^^^^ attributes hash: 16804606599831072828
    │
    = ExpressionAttributes {
          typ: Base(
              Address,
          ),
          location: Value,
          move_location: None,
      }

note: 
   ┌─ demos/uniswap.fe:78:9
   │
78 │         emit Transfer(from=address(0), to, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13133831135344517982
   │
   = EventDef {
         name: "Transfer",
         fields: [
             (
                 "from",
                 Base(
                     Address,
                 ),
             ),
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [
             0,
             1,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:83:9
   │
83 │         emit Transfer(from, to=address(0), value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13133831135344517982
   │
   = EventDef {
         name: "Transfer",
         fields: [
             (
                 "from",
                 Base(
                     Address,
                 ),
             ),
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [
             0,
             1,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:87:9
   │
87 │         emit Approval(owner, spender, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 33203932515406232
   │
   = EventDef {
         name: "Approval",
         fields: [
             (
                 "owner",
                 Base(
                     Address,
                 ),
             ),
             (
                 "spender",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [
             0,
             1,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:92:9
   │
92 │         emit Transfer(from, to, value)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13133831135344517982
   │
   = EventDef {
         name: "Transfer",
         fields: [
             (
                 "from",
                 Base(
                     Address,
                 ),
             ),
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [
             0,
             1,
         ],
     }

note: 
    ┌─ demos/uniswap.fe:136:9
    │
136 │         emit Sync(reserve0=self.reserve0, reserve1=self.reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13994204795377527353
    │
    = EventDef {
          name: "Sync",
          fields: [
              (
                  "reserve0",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "reserve1",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          indexed_fields: [],
      }

note: 
    ┌─ demos/uniswap.fe:185:9
    │
185 │         emit Mint(sender=msg.sender, amount0, amount1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 2843628716761322765
    │
    = EventDef {
          name: "Mint",
          fields: [
              (
                  "sender",
                  Base(
                      Address,
                  ),
              ),
              (
                  "amount0",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "amount1",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          indexed_fields: [
              0,
          ],
      }

note: 
    ┌─ demos/uniswap.fe:214:9
    │
214 │         emit Burn(sender=msg.sender, amount0, amount1, to)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 2179438666396421974
    │
    = EventDef {
          name: "Burn",
          fields: [
              (
                  "sender",
                  Base(
                      Address,
                  ),
              ),
              (
                  "amount0",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "amount1",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
          ],
          indexed_fields: [
              0,
              3,
          ],
      }

note: 
    ┌─ demos/uniswap.fe:254:9
    │
254 │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13230512840943275093
    │
    = EventDef {
          name: "Swap",
          fields: [
              (
                  "sender",
                  Base(
                      Address,
                  ),
              ),
              (
                  "amount0_in",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "amount1_in",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "amount0_out",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "amount1_out",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
          ],
          indexed_fields: [
              0,
              5,
          ],
      }

note: 
    ┌─ demos/uniswap.fe:329:9
    │
329 │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 6014823549090347161
    │
    = EventDef {
          name: "PairCreated",
          fields: [
              (
                  "token0",
                  Base(
                      Address,
                  ),
              ),
              (
                  "token1",
                  Base(
                      Address,
                  ),
              ),
              (
                  "pair",
                  Base(
                      Address,
                  ),
              ),
              (
                  "index",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          indexed_fields: [
              0,
              1,
          ],
      }

note: 
  ┌─ demos/uniswap.fe:2:5
  │  
2 │ ╭     pub def balanceOf(account: address) -> u256:
3 │ │         return 0
  │ ╰────────────────^ attributes hash: 7157545673553628931
  │  
  = FunctionAttributes {
        is_public: true,
        name: "balanceOf",
        params: [
            (
                "account",
                Base(
                    Address,
                ),
            ),
        ],
        return_type: Base(
            Numeric(
                U256,
            ),
        ),
    }

note: 
  ┌─ demos/uniswap.fe:5:5
  │  
5 │ ╭     pub def transfer(recipient: address, amount: u256) -> bool:
6 │ │         return false
  │ ╰────────────────────^ attributes hash: 15882596185871223380
  │  
  = FunctionAttributes {
        is_public: true,
        name: "transfer",
        params: [
            (
                "recipient",
                Base(
                    Address,
                ),
            ),
            (
                "amount",
                Base(
                    Numeric(
                        U256,
                    ),
                ),
            ),
        ],
        return_type: Base(
            Bool,
        ),
    }

note: 
   ┌─ demos/uniswap.fe:63:5
   │  
63 │ ╭     pub def __init__():
64 │ │         self.factory = msg.sender
   │ ╰─────────────────────────────────^ attributes hash: 5584559917281080592
   │  
   = FunctionAttributes {
         is_public: true,
         name: "__init__",
         params: [],
         return_type: Base(
             Unit,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:66:5
   │  
66 │ ╭     pub def factory() -> address:
67 │ │         return self.factory
   │ ╰───────────────────────────^ attributes hash: 13988961597390356944
   │  
   = FunctionAttributes {
         is_public: true,
         name: "factory",
         params: [],
         return_type: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:69:5
   │  
69 │ ╭     pub def token0() -> address:
70 │ │         return self.token0
   │ ╰──────────────────────────^ attributes hash: 3184983857233773825
   │  
   = FunctionAttributes {
         is_public: true,
         name: "token0",
         params: [],
         return_type: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:72:5
   │  
72 │ ╭     pub def token1() -> address:
73 │ │         return self.token1
   │ ╰──────────────────────────^ attributes hash: 8022982535343174135
   │  
   = FunctionAttributes {
         is_public: true,
         name: "token1",
         params: [],
         return_type: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:75:5
   │  
75 │ ╭     def _mint(to: address, value: u256):
76 │ │         self.total_supply = self.total_supply + value
77 │ │         self.balances[to] = self.balances[to] + value
78 │ │         emit Transfer(from=address(0), to, value)
   │ ╰─────────────────────────────────────────────────^ attributes hash: 16946571682639821740
   │  
   = FunctionAttributes {
         is_public: false,
         name: "_mint",
         params: [
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Unit,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:80:5
   │  
80 │ ╭     def _burn(from: address, value: u256):
81 │ │         self.balances[from] = self.balances[from] - value
82 │ │         self.total_supply = self.total_supply - value
83 │ │         emit Transfer(from, to=address(0), value)
   │ ╰─────────────────────────────────────────────────^ attributes hash: 10575587628462518149
   │  
   = FunctionAttributes {
         is_public: false,
         name: "_burn",
         params: [
             (
                 "from",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Unit,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:85:5
   │  
85 │ ╭     def _approve(owner: address, spender: address, value: u256):
86 │ │         self.allowances[owner][spender] = value
87 │ │         emit Approval(owner, spender, value)
   │ ╰────────────────────────────────────────────^ attributes hash: 17806413926038540594
   │  
   = FunctionAttributes {
         is_public: false,
         name: "_approve",
         params: [
             (
                 "owner",
                 Base(
                     Address,
                 ),
             ),
             (
                 "spender",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Unit,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:89:5
   │  
89 │ ╭     def _transfer(from: address, to: address, value: u256):
90 │ │         self.balances[from] = self.balances[from] - value
91 │ │         self.balances[to] = self.balances[to] + value
92 │ │         emit Transfer(from, to, value)
   │ ╰──────────────────────────────────────^ attributes hash: 9482376965004719943
   │  
   = FunctionAttributes {
         is_public: false,
         name: "_transfer",
         params: [
             (
                 "from",
                 Base(
                     Address,
                 ),
             ),
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Unit,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:94:5
   │  
94 │ ╭     pub def approve(spender: address, value: u256) -> bool:
95 │ │         self._approve(msg.sender, spender, value)
96 │ │         return true
   │ ╰───────────────────^ attributes hash: 6637719029659933611
   │  
   = FunctionAttributes {
         is_public: true,
         name: "approve",
         params: [
             (
                 "spender",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Bool,
         ),
     }

note: 
    ┌─ demos/uniswap.fe:98:5
    │  
 98 │ ╭     pub def transfer(to: address, value: u256) -> bool:
 99 │ │         self._transfer(msg.sender, to, value)
100 │ │         return true
    │ ╰───────────────────^ attributes hash: 17527321722461485304
    │  
    = FunctionAttributes {
          is_public: true,
          name: "transfer",
          params: [
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
              (
                  "value",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          return_type: Base(
              Bool,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:102:5
    │  
102 │ ╭     pub def transferFrom(from: address, to: address, value: u256) -> bool:
103 │ │         assert self.allowances[from][msg.sender] >= value
104 │ │ 
105 │ │         self.allowances[from][msg.sender] = self.allowances[from][msg.sender] - value
106 │ │         self._transfer(from, to, value)
107 │ │         return true
    │ ╰───────────────────^ attributes hash: 16373978336904967818
    │  
    = FunctionAttributes {
          is_public: true,
          name: "transferFrom",
          params: [
              (
                  "from",
                  Base(
                      Address,
                  ),
              ),
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
              (
                  "value",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          return_type: Base(
              Bool,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:109:5
    │  
109 │ ╭     pub def balanceOf(account: address) -> u256:
110 │ │         return self.balances[account]
    │ ╰─────────────────────────────────────^ attributes hash: 7157545673553628931
    │  
    = FunctionAttributes {
          is_public: true,
          name: "balanceOf",
          params: [
              (
                  "account",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Numeric(
                  U256,
              ),
          ),
      }

note: 
    ┌─ demos/uniswap.fe:112:5
    │  
112 │ ╭     pub def get_reserves() -> (u256, u256, u256):
113 │ │         return (self.reserve0, self.reserve1, self.block_timestamp_last)
    │ ╰────────────────────────────────────────────────────────────────────────^ attributes hash: 6922630555867942579
    │  
    = FunctionAttributes {
          is_public: true,
          name: "get_reserves",
          params: [],
          return_type: Tuple(
              Tuple {
                  items: [
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:116:5
    │  
116 │ ╭     pub def initialize(token0: address, token1: address):
117 │ │         # TODO: we should not be ignoring the revert messages (https://github.com/ethereum/fe/issues/288)
118 │ │         assert msg.sender == self.factory, "UniswapV2: FORBIDDEN"
119 │ │         self.token0 = token0
120 │ │         self.token1 = token1
    │ ╰────────────────────────────^ attributes hash: 15892949235097327745
    │  
    = FunctionAttributes {
          is_public: true,
          name: "initialize",
          params: [
              (
                  "token0",
                  Base(
                      Address,
                  ),
              ),
              (
                  "token1",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:123:5
    │  
123 │ ╭     def _update(balance0: u256, balance1: u256, reserve0: u256, reserve1: u256):
124 │ │         # changed from u32s
125 │ │         block_timestamp: u256 = block.timestamp % 2**32
126 │ │         # TODO: reproduce desired overflow (https://github.com/ethereum/fe/issues/286)
    · │
135 │ │         self.block_timestamp_last = block_timestamp
136 │ │         emit Sync(reserve0=self.reserve0, reserve1=self.reserve1)
    │ ╰─────────────────────────────────────────────────────────────────^ attributes hash: 13326746148831269702
    │  
    = FunctionAttributes {
          is_public: false,
          name: "_update",
          params: [
              (
                  "balance0",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "balance1",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "reserve0",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "reserve1",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:139:5
    │  
139 │ ╭     def _mint_fee(reserve0: u256, reserve1: u256) -> bool:
140 │ │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
141 │ │         fee_on: bool = fee_to != address(0)
142 │ │         k_last: u256 = self.k_last # gas savings
    · │
155 │ │ 
156 │ │         return fee_on
    │ ╰─────────────────────^ attributes hash: 2798546235610783108
    │  
    = FunctionAttributes {
          is_public: false,
          name: "_mint_fee",
          params: [
              (
                  "reserve0",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "reserve1",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          return_type: Base(
              Bool,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:159:5
    │  
159 │ ╭     pub def mint(to: address) -> u256:
160 │ │         MINIMUM_LIQUIDITY: u256 = 1000
161 │ │         reserve0: u256 = self.reserve0
162 │ │         reserve1: u256 = self.reserve1
    · │
185 │ │         emit Mint(sender=msg.sender, amount0, amount1)
186 │ │         return liquidity
    │ ╰────────────────────────^ attributes hash: 15547988215002423785
    │  
    = FunctionAttributes {
          is_public: true,
          name: "mint",
          params: [
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Numeric(
                  U256,
              ),
          ),
      }

note: 
    ┌─ demos/uniswap.fe:189:5
    │  
189 │ ╭     pub def burn(to: address) -> (u256, u256):
190 │ │         reserve0: u256 = self.reserve0
191 │ │         reserve1: u256 = self.reserve1
192 │ │         token0: ERC20 = ERC20(self.token0)
    · │
214 │ │         emit Burn(sender=msg.sender, amount0, amount1, to)
215 │ │         return (amount0, amount1)
    │ ╰─────────────────────────────────^ attributes hash: 11109829201378428804
    │  
    = FunctionAttributes {
          is_public: true,
          name: "burn",
          params: [
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Tuple(
              Tuple {
                  items: [
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                      Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:220:5
    │  
220 │ ╭     pub def swap(amount0_out: u256, amount1_out: u256, to: address):
221 │ │         assert amount0_out > 0 or amount1_out > 0, "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
222 │ │         reserve0: u256 = self.reserve0
223 │ │         reserve1: u256 = self.reserve1
    · │
253 │ │         self._update(balance0, balance1, reserve0, reserve1)
254 │ │         emit Swap(sender=msg.sender, amount0_in, amount1_in, amount0_out, amount1_out, to)
    │ ╰──────────────────────────────────────────────────────────────────────────────────────────^ attributes hash: 8221514343909888668
    │  
    = FunctionAttributes {
          is_public: true,
          name: "swap",
          params: [
              (
                  "amount0_out",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "amount1_out",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:257:5
    │  
257 │ ╭     pub def skim(to: address):
258 │ │         token0: ERC20 = ERC20(self.token0) # gas savings
259 │ │         token1: ERC20 = ERC20(self.token1) # gas savings
260 │ │ 
261 │ │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
262 │ │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │ ╰───────────────────────────────────────────────────────────────────────────^ attributes hash: 9802343259518832170
    │  
    = FunctionAttributes {
          is_public: true,
          name: "skim",
          params: [
              (
                  "to",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:265:5
    │  
265 │ ╭     pub def sync():
266 │ │         token0: ERC20 = ERC20(self.token0)
267 │ │         token1: ERC20 = ERC20(self.token1)
268 │ │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │ ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────^ attributes hash: 15809870018759044450
    │  
    = FunctionAttributes {
          is_public: true,
          name: "sync",
          params: [],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:270:5
    │  
270 │ ╭     def sqrt(val: u256) -> u256:
271 │ │         z: u256
272 │ │         if (val > 3):
273 │ │             z = val
    · │
279 │ │             z = 1
280 │ │         return z
    │ ╰────────────────^ attributes hash: 946353284829069289
    │  
    = FunctionAttributes {
          is_public: false,
          name: "sqrt",
          params: [
              (
                  "val",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          return_type: Base(
              Numeric(
                  U256,
              ),
          ),
      }

note: 
    ┌─ demos/uniswap.fe:282:5
    │  
282 │ ╭     def min(x: u256, y: u256) -> u256:
283 │ │         return x if x < y else y
    │ ╰────────────────────────────────^ attributes hash: 17580763625104168016
    │  
    = FunctionAttributes {
          is_public: false,
          name: "min",
          params: [
              (
                  "x",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
              (
                  "y",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          return_type: Base(
              Numeric(
                  U256,
              ),
          ),
      }

note: 
    ┌─ demos/uniswap.fe:300:5
    │  
300 │ ╭     pub def __init__(fee_to_setter: address):
301 │ │        self.fee_to_setter = fee_to_setter
    │ ╰─────────────────────────────────────────^ attributes hash: 17708011189733590564
    │  
    = FunctionAttributes {
          is_public: true,
          name: "__init__",
          params: [
              (
                  "fee_to_setter",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:303:5
    │  
303 │ ╭     pub def fee_to() -> address:
304 │ │         return self.fee_to
    │ ╰──────────────────────────^ attributes hash: 18007099977413937410
    │  
    = FunctionAttributes {
          is_public: true,
          name: "fee_to",
          params: [],
          return_type: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:306:5
    │  
306 │ ╭     pub def fee_to_setter() -> address:
307 │ │         return self.fee_to_setter
    │ ╰─────────────────────────────────^ attributes hash: 17516767922872663408
    │  
    = FunctionAttributes {
          is_public: true,
          name: "fee_to_setter",
          params: [],
          return_type: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:309:5
    │  
309 │ ╭     pub def all_pairs_length() -> u256:
310 │ │         return self.pair_counter
    │ ╰────────────────────────────────^ attributes hash: 12446037491003663576
    │  
    = FunctionAttributes {
          is_public: true,
          name: "all_pairs_length",
          params: [],
          return_type: Base(
              Numeric(
                  U256,
              ),
          ),
      }

note: 
    ┌─ demos/uniswap.fe:312:5
    │  
312 │ ╭     pub def create_pair(token_a: address, token_b: address) -> address:
313 │ │         assert token_a != token_b, "UniswapV2: IDENTICAL_ADDRESSES"
314 │ │ 
315 │ │         token0: address = token_a if token_a < token_b else token_b
    · │
329 │ │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
330 │ │         return address(pair)
    │ ╰────────────────────────────^ attributes hash: 10031187803142621028
    │  
    = FunctionAttributes {
          is_public: true,
          name: "create_pair",
          params: [
              (
                  "token_a",
                  Base(
                      Address,
                  ),
              ),
              (
                  "token_b",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:332:5
    │  
332 │ ╭     pub def set_fee_to(fee_to: address):
333 │ │         assert msg.sender == self.fee_to_setter, "UniswapV2: FORBIDDEN"
334 │ │         self.fee_to = fee_to
    │ ╰────────────────────────────^ attributes hash: 4708750762344106877
    │  
    = FunctionAttributes {
          is_public: true,
          name: "set_fee_to",
          params: [
              (
                  "fee_to",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:336:5
    │  
336 │ ╭     pub def set_fee_to_setter(fee_to_setter: address):
337 │ │         assert msg.sender == fee_to_setter, "UniswapV2: FORBIDDEN"
338 │ │         self.fee_to_setter = fee_to_setter
    │ ╰──────────────────────────────────────────^ attributes hash: 1315403442305090951
    │  
    = FunctionAttributes {
          is_public: true,
          name: "set_fee_to_setter",
          params: [
              (
                  "fee_to_setter",
                  Base(
                      Address,
                  ),
              ),
          ],
          return_type: Base(
              Unit,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:125:9
    │
125 │         block_timestamp: u256 = block.timestamp % 2**32
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:127:9
    │
127 │         time_elapsed: u256 = block_timestamp - self.block_timestamp_last # overflow is desired
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:140:9
    │
140 │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:141:9
    │
141 │         fee_on: bool = fee_to != address(0)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:142:9
    │
142 │         k_last: u256 = self.k_last # gas savings
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:145:17
    │
145 │                 root_k: u256 = self.sqrt(reserve0 * reserve1)
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:146:17
    │
146 │                 root_k_last: u256 = self.sqrt(k_last)
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:148:21
    │
148 │                     numerator: u256 = self.total_supply * root_k - root_k_last
    │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:149:21
    │
149 │                     denominator: u256 = root_k * 5 + root_k_last
    │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:150:21
    │
150 │                     liquidity: u256 = numerator / denominator
    │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:160:9
    │
160 │         MINIMUM_LIQUIDITY: u256 = 1000
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:161:9
    │
161 │         reserve0: u256 = self.reserve0
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:162:9
    │
162 │         reserve1: u256 = self.reserve1
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:163:9
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:164:9
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:165:9
    │
165 │         amount0: u256 = balance0 - self.reserve0
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:166:9
    │
166 │         amount1: u256 = balance1 - self.reserve1
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:168:9
    │
168 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:169:9
    │
169 │         total_supply: u256 = self.total_supply # gas savings, must be defined here since totalSupply can update in _mintFee
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:170:9
    │
170 │         liquidity: u256 = 0
    │         ^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:190:9
    │
190 │         reserve0: u256 = self.reserve0
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:191:9
    │
191 │         reserve1: u256 = self.reserve1
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:192:9
    │
192 │         token0: ERC20 = ERC20(self.token0)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:193:9
    │
193 │         token1: ERC20 = ERC20(self.token1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:194:9
    │
194 │         balance0: u256 = token0.balanceOf(self.address)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:195:9
    │
195 │         balance1: u256 = token1.balanceOf(self.address)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:196:9
    │
196 │         liquidity: u256 = self.balances[self.address]
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:198:9
    │
198 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:199:9
    │
199 │         total_supply: u256 = self.total_supply # gas savings, must be defined here since total_supply can update in _mintFee
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:200:9
    │
200 │         amount0: u256 = (liquidity * balance0) / total_supply # using balances ensures pro-rata distribution
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:201:9
    │
201 │         amount1: u256 = (liquidity * balance1) / total_supply # using balances ensures pro-rata distribution
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:222:9
    │
222 │         reserve0: u256 = self.reserve0
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:223:9
    │
223 │         reserve1: u256 = self.reserve1
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:226:9
    │
226 │         token0: ERC20 = ERC20(self.token0)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:227:9
    │
227 │         token1: ERC20 = ERC20(self.token1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:240:9
    │
240 │         balance0: u256 = token0.balanceOf(self.address)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:241:9
    │
241 │         balance1: u256 = token1.balanceOf(self.address)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:243:9
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:244:9
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:248:9
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:249:9
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:258:9
    │
258 │         token0: ERC20 = ERC20(self.token0) # gas savings
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:259:9
    │
259 │         token1: ERC20 = ERC20(self.token1) # gas savings
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:266:9
    │
266 │         token0: ERC20 = ERC20(self.token0)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:267:9
    │
267 │         token1: ERC20 = ERC20(self.token1)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:271:9
    │
271 │         z: u256
    │         ^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:274:13
    │
274 │             x: u256 = val / 2 + 1
    │             ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:315:9
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:316:9
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:320:9
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:321:9
    │
321 │         pair: UniswapV2Pair = UniswapV2Pair.create2(0, salt)
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 13093166435588373534
    │
    = Contract(
          Contract {
              name: "UniswapV2Pair",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "approve",
                      params: [
                          (
                              "spender",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "value",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "burn",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Tuple(
                          Tuple {
                              items: [
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ],
                          },
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "factory",
                      params: [],
                      return_type: Base(
                          Address,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "get_reserves",
                      params: [],
                      return_type: Tuple(
                          Tuple {
                              items: [
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ],
                          },
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "initialize",
                      params: [
                          (
                              "token0",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "token1",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "mint",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "skim",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "swap",
                      params: [
                          (
                              "amount0_out",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                          (
                              "amount1_out",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "sync",
                      params: [],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "token0",
                      params: [],
                      return_type: Base(
                          Address,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "token1",
                      params: [],
                      return_type: Base(
                          Address,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "value",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transferFrom",
                      params: [
                          (
                              "from",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "value",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
  ┌─ demos/uniswap.fe:1:1
  │  
1 │ ╭ contract ERC20:
2 │ │     pub def balanceOf(account: address) -> u256:
3 │ │         return 0
4 │ │ 
5 │ │     pub def transfer(recipient: address, amount: u256) -> bool:
6 │ │         return false
  │ ╰────────────────────^ attributes hash: 6026512562886001667
  │  
  = ContractAttributes {
        public_functions: [
            FunctionAttributes {
                is_public: true,
                name: "balanceOf",
                params: [
                    (
                        "account",
                        Base(
                            Address,
                        ),
                    ),
                ],
                return_type: Base(
                    Numeric(
                        U256,
                    ),
                ),
            },
            FunctionAttributes {
                is_public: true,
                name: "transfer",
                params: [
                    (
                        "recipient",
                        Base(
                            Address,
                        ),
                    ),
                    (
                        "amount",
                        Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    ),
                ],
                return_type: Base(
                    Bool,
                ),
            },
        ],
        init_function: None,
        events: [],
        structs: [],
        external_contracts: [
            Contract {
                name: "UniswapV2Factory",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "all_pairs_length",
                        params: [],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "create_pair",
                        params: [
                            (
                                "token_a",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "token_b",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "fee_to",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "fee_to_setter",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "set_fee_to",
                        params: [
                            (
                                "fee_to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "set_fee_to_setter",
                        params: [
                            (
                                "fee_to_setter",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                ],
            },
            Contract {
                name: "UniswapV2Pair",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "approve",
                        params: [
                            (
                                "spender",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "value",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "balanceOf",
                        params: [
                            (
                                "account",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "burn",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Tuple(
                            Tuple {
                                items: [
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                ],
                            },
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "factory",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "get_reserves",
                        params: [],
                        return_type: Tuple(
                            Tuple {
                                items: [
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                    Base(
                                        Numeric(
                                            U256,
                                        ),
                                    ),
                                ],
                            },
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "initialize",
                        params: [
                            (
                                "token0",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "token1",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "mint",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "skim",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "swap",
                        params: [
                            (
                                "amount0_out",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "amount1_out",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "sync",
                        params: [],
                        return_type: Base(
                            Unit,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "token0",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "token1",
                        params: [],
                        return_type: Base(
                            Address,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "transfer",
                        params: [
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "value",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "transferFrom",
                        params: [
                            (
                                "from",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "to",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "value",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                ],
            },
        ],
    }

note: 
    ┌─ demos/uniswap.fe:8:1
    │  
  8 │ ╭ contract UniswapV2Pair:
  9 │ │     # TODO: const support (https://github.com/ethereum/fe/issues/192)
 10 │ │     # const MINIMUM_LIQUIDITY: u256 = 1000
 11 │ │ 
    · │
282 │ │     def min(x: u256, y: u256) -> u256:
283 │ │         return x if x < y else y
    │ ╰────────────────────────────────^ attributes hash: 70790541238228800
    │  
    = ContractAttributes {
          public_functions: [
              FunctionAttributes {
                  is_public: true,
                  name: "approve",
                  params: [
                      (
                          "spender",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "value",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  return_type: Base(
                      Bool,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "balanceOf",
                  params: [
                      (
                          "account",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "burn",
                  params: [
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Tuple(
                      Tuple {
                          items: [
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ],
                      },
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "factory",
                  params: [],
                  return_type: Base(
                      Address,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "get_reserves",
                  params: [],
                  return_type: Tuple(
                      Tuple {
                          items: [
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ],
                      },
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "initialize",
                  params: [
                      (
                          "token0",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "token1",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Unit,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "mint",
                  params: [
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "skim",
                  params: [
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Unit,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "swap",
                  params: [
                      (
                          "amount0_out",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "amount1_out",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Unit,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "sync",
                  params: [],
                  return_type: Base(
                      Unit,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "token0",
                  params: [],
                  return_type: Base(
                      Address,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "token1",
                  params: [],
                  return_type: Base(
                      Address,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "transfer",
                  params: [
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "value",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  return_type: Base(
                      Bool,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "transferFrom",
                  params: [
                      (
                          "from",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "value",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  return_type: Base(
                      Bool,
                  ),
              },
          ],
          init_function: Some(
              FunctionAttributes {
                  is_public: true,
                  name: "__init__",
                  params: [],
                  return_type: Base(
                      Unit,
                  ),
              },
          ),
          events: [
              EventDef {
                  name: "Approval",
                  fields: [
                      (
                          "owner",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "spender",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "value",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  indexed_fields: [
                      0,
                      1,
                  ],
              },
              EventDef {
                  name: "Burn",
                  fields: [
                      (
                          "sender",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "amount0",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "amount1",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  indexed_fields: [
                      0,
                      3,
                  ],
              },
              EventDef {
                  name: "Mint",
                  fields: [
                      (
                          "sender",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "amount0",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "amount1",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  indexed_fields: [
                      0,
                  ],
              },
              EventDef {
                  name: "Swap",
                  fields: [
                      (
                          "sender",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "amount0_in",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "amount1_in",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "amount0_out",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "amount1_out",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  indexed_fields: [
                      0,
                      5,
                  ],
              },
              EventDef {
                  name: "Sync",
                  fields: [
                      (
                          "reserve0",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                      (
                          "reserve1",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  indexed_fields: [],
              },
              EventDef {
                  name: "Transfer",
                  fields: [
                      (
                          "from",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "to",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "value",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  indexed_fields: [
                      0,
                      1,
                  ],
              },
          ],
          structs: [],
          external_contracts: [
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
              Contract {
                  name: "UniswapV2Factory",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "all_pairs_length",
                          params: [],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "create_pair",
                          params: [
                              (
                                  "token_a",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token_b",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "fee_to",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "fee_to_setter",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "set_fee_to",
                          params: [
                              (
                                  "fee_to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "set_fee_to_setter",
                          params: [
                              (
                                  "fee_to_setter",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                  ],
              },
          ],
      }

note: 
    ┌─ demos/uniswap.fe:285:1
    │  
285 │ ╭ contract UniswapV2Factory:
286 │ │     fee_to: address
287 │ │     fee_to_setter: address
288 │ │ 
    · │
337 │ │         assert msg.sender == fee_to_setter, "UniswapV2: FORBIDDEN"
338 │ │         self.fee_to_setter = fee_to_setter
    │ ╰──────────────────────────────────────────^ attributes hash: 15769488941515133797
    │  
    = ContractAttributes {
          public_functions: [
              FunctionAttributes {
                  is_public: true,
                  name: "all_pairs_length",
                  params: [],
                  return_type: Base(
                      Numeric(
                          U256,
                      ),
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "create_pair",
                  params: [
                      (
                          "token_a",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "token_b",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Address,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "fee_to",
                  params: [],
                  return_type: Base(
                      Address,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "fee_to_setter",
                  params: [],
                  return_type: Base(
                      Address,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "set_fee_to",
                  params: [
                      (
                          "fee_to",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Unit,
                  ),
              },
              FunctionAttributes {
                  is_public: true,
                  name: "set_fee_to_setter",
                  params: [
                      (
                          "fee_to_setter",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Unit,
                  ),
              },
          ],
          init_function: Some(
              FunctionAttributes {
                  is_public: true,
                  name: "__init__",
                  params: [
                      (
                          "fee_to_setter",
                          Base(
                              Address,
                          ),
                      ),
                  ],
                  return_type: Base(
                      Unit,
                  ),
              },
          ),
          events: [
              EventDef {
                  name: "PairCreated",
                  fields: [
                      (
                          "token0",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "token1",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "pair",
                          Base(
                              Address,
                          ),
                      ),
                      (
                          "index",
                          Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      ),
                  ],
                  indexed_fields: [
                      0,
                      1,
                  ],
              },
          ],
          structs: [],
          external_contracts: [
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ],
      }

note: 
   ┌─ demos/uniswap.fe:78:28
   │
78 │         emit Transfer(from=address(0), to, value)
   │                            ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:83:32
   │
83 │         emit Transfer(from, to=address(0), value)
   │                                ^^^^^^^ attributes hash: 14203407709342965641
   │
   = TypeConstructor {
         typ: Base(
             Address,
         ),
     }

note: 
   ┌─ demos/uniswap.fe:95:9
   │
95 │         self._approve(msg.sender, spender, value)
   │         ^^^^^^^^^^^^^ attributes hash: 11653095055511118634
   │
   = SelfAttribute {
         func_name: "_approve",
     }

note: 
   ┌─ demos/uniswap.fe:99:9
   │
99 │         self._transfer(msg.sender, to, value)
   │         ^^^^^^^^^^^^^^ attributes hash: 17554789810436603039
   │
   = SelfAttribute {
         func_name: "_transfer",
     }

note: 
    ┌─ demos/uniswap.fe:106:9
    │
106 │         self._transfer(from, to, value)
    │         ^^^^^^^^^^^^^^ attributes hash: 17554789810436603039
    │
    = SelfAttribute {
          func_name: "_transfer",
      }

note: 
    ┌─ demos/uniswap.fe:140:27
    │
140 │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
    │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:140:27
    │
140 │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
    │                           ^^^^^^^^^^^^^^^^ attributes hash: 760172340897192080
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "UniswapV2Factory",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "all_pairs_length",
                          params: [],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "create_pair",
                          params: [
                              (
                                  "token_a",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token_b",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "fee_to",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "fee_to_setter",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "set_fee_to",
                          params: [
                              (
                                  "fee_to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "set_fee_to_setter",
                          params: [
                              (
                                  "fee_to_setter",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:141:34
    │
141 │         fee_on: bool = fee_to != address(0)
    │                                  ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:145:32
    │
145 │                 root_k: u256 = self.sqrt(reserve0 * reserve1)
    │                                ^^^^^^^^^ attributes hash: 9944310827285951567
    │
    = SelfAttribute {
          func_name: "sqrt",
      }

note: 
    ┌─ demos/uniswap.fe:146:37
    │
146 │                 root_k_last: u256 = self.sqrt(k_last)
    │                                     ^^^^^^^^^ attributes hash: 9944310827285951567
    │
    = SelfAttribute {
          func_name: "sqrt",
      }

note: 
    ┌─ demos/uniswap.fe:152:25
    │
152 │                         self._mint(fee_to, liquidity)
    │                         ^^^^^^^^^^ attributes hash: 1155617642661253645
    │
    = SelfAttribute {
          func_name: "_mint",
      }

note: 
    ┌─ demos/uniswap.fe:163:26
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:163:26
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │                          ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:164:26
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:164:26
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │                          ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:168:24
    │
168 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                        ^^^^^^^^^^^^^^ attributes hash: 13891964698023729577
    │
    = SelfAttribute {
          func_name: "_mint_fee",
      }

note: 
    ┌─ demos/uniswap.fe:172:25
    │
172 │             liquidity = self.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY
    │                         ^^^^^^^^^ attributes hash: 9944310827285951567
    │
    = SelfAttribute {
          func_name: "sqrt",
      }

note: 
    ┌─ demos/uniswap.fe:173:13
    │
173 │             self._mint(address(0), MINIMUM_LIQUIDITY) # permanently lock the first MINIMUM_LIQUIDITY tokens
    │             ^^^^^^^^^^ attributes hash: 1155617642661253645
    │
    = SelfAttribute {
          func_name: "_mint",
      }

note: 
    ┌─ demos/uniswap.fe:173:24
    │
173 │             self._mint(address(0), MINIMUM_LIQUIDITY) # permanently lock the first MINIMUM_LIQUIDITY tokens
    │                        ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:175:25
    │
175 │             liquidity = self.min((amount0 * total_supply) / reserve0, (amount1 * total_supply) / reserve1)
    │                         ^^^^^^^^ attributes hash: 13669611707215958911
    │
    = SelfAttribute {
          func_name: "min",
      }

note: 
    ┌─ demos/uniswap.fe:179:9
    │
179 │         self._mint(to, liquidity)
    │         ^^^^^^^^^^ attributes hash: 1155617642661253645
    │
    = SelfAttribute {
          func_name: "_mint",
      }

note: 
    ┌─ demos/uniswap.fe:180:9
    │
180 │         self._update(balance0, balance1, reserve0, reserve1)
    │         ^^^^^^^^^^^^ attributes hash: 6764850540347574840
    │
    = SelfAttribute {
          func_name: "_update",
      }

note: 
    ┌─ demos/uniswap.fe:192:25
    │
192 │         token0: ERC20 = ERC20(self.token0)
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:193:25
    │
193 │         token1: ERC20 = ERC20(self.token1)
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:194:26
    │
194 │         balance0: u256 = token0.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:195:26
    │
195 │         balance1: u256 = token1.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:198:24
    │
198 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                        ^^^^^^^^^^^^^^ attributes hash: 13891964698023729577
    │
    = SelfAttribute {
          func_name: "_mint_fee",
      }

note: 
    ┌─ demos/uniswap.fe:203:9
    │
203 │         self._burn(self.address, liquidity)
    │         ^^^^^^^^^^ attributes hash: 9774977178119003771
    │
    = SelfAttribute {
          func_name: "_burn",
      }

note: 
    ┌─ demos/uniswap.fe:204:9
    │
204 │         token0.transfer(to, amount0)
    │         ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:205:9
    │
205 │         token1.transfer(to, amount1)
    │         ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:206:20
    │
206 │         balance0 = token0.balanceOf(self.address)
    │                    ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:207:20
    │
207 │         balance1 = token1.balanceOf(self.address)
    │                    ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:209:9
    │
209 │         self._update(balance0, balance1, reserve0, reserve1)
    │         ^^^^^^^^^^^^ attributes hash: 6764850540347574840
    │
    = SelfAttribute {
          func_name: "_update",
      }

note: 
    ┌─ demos/uniswap.fe:226:25
    │
226 │         token0: ERC20 = ERC20(self.token0)
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:227:25
    │
227 │         token1: ERC20 = ERC20(self.token1)
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:230:22
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                      ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:230:48
    │
230 │         assert to != address(token0) and to != address(token1), "UniswapV2: INVALID_TO"
    │                                                ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:233:13
    │
233 │             token0.transfer(to, amount0_out) # optimistically transfer tokens
    │             ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:235:13
    │
235 │             token1.transfer(to, amount1_out) # optimistically transfer tokens
    │             ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:240:26
    │
240 │         balance0: u256 = token0.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:241:26
    │
241 │         balance1: u256 = token1.balanceOf(self.address)
    │                          ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:253:9
    │
253 │         self._update(balance0, balance1, reserve0, reserve1)
    │         ^^^^^^^^^^^^ attributes hash: 6764850540347574840
    │
    = SelfAttribute {
          func_name: "_update",
      }

note: 
    ┌─ demos/uniswap.fe:258:25
    │
258 │         token0: ERC20 = ERC20(self.token0) # gas savings
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:259:25
    │
259 │         token1: ERC20 = ERC20(self.token1) # gas savings
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:261:9
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │         ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:261:29
    │
261 │         token0.transfer(to, token0.balanceOf(self.address) - self.reserve0)
    │                             ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:262:9
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │         ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:262:29
    │
262 │         token1.transfer(to, token1.balanceOf(self.address) - self.reserve1)
    │                             ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:266:25
    │
266 │         token0: ERC20 = ERC20(self.token0)
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:267:25
    │
267 │         token1: ERC20 = ERC20(self.token1)
    │                         ^^^^^ attributes hash: 9170975807890606078
    │
    = TypeConstructor {
          typ: Contract(
              Contract {
                  name: "ERC20",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "recipient",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "amount",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
      }

note: 
    ┌─ demos/uniswap.fe:268:9
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │         ^^^^^^^^^^^^ attributes hash: 6764850540347574840
    │
    = SelfAttribute {
          func_name: "_update",
      }

note: 
    ┌─ demos/uniswap.fe:268:22
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                      ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:268:54
    │
268 │         self._update(token0.balanceOf(self.address), token1.balanceOf(self.address), self.reserve0, self.reserve1)
    │                                                      ^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:317:26
    │
317 │         assert token0 != address(0), "UniswapV2: ZERO_ADDRESS"
    │                          ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:318:46
    │
318 │         assert self.pairs[token0][token1] == address(0), "UniswapV2: PAIR_EXISTS"
    │                                              ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:320:22
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │                      ^^^^^^^^^ attributes hash: 11888120106960716956
    │
    = BuiltinFunction {
          func: Keccak256,
      }

note: 
    ┌─ demos/uniswap.fe:320:32
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:321:31
    │
321 │         pair: UniswapV2Pair = UniswapV2Pair.create2(0, salt)
    │                               ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 12437796011888719700
    │
    = TypeAttribute {
          typ: Contract(
              Contract {
                  name: "UniswapV2Pair",
                  functions: [
                      FunctionAttributes {
                          is_public: true,
                          name: "approve",
                          params: [
                              (
                                  "spender",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "balanceOf",
                          params: [
                              (
                                  "account",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "burn",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "factory",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "get_reserves",
                          params: [],
                          return_type: Tuple(
                              Tuple {
                                  items: [
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                      Base(
                                          Numeric(
                                              U256,
                                          ),
                                      ),
                                  ],
                              },
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "initialize",
                          params: [
                              (
                                  "token0",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "token1",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "mint",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Numeric(
                                  U256,
                              ),
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "skim",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "swap",
                          params: [
                              (
                                  "amount0_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "amount1_out",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "sync",
                          params: [],
                          return_type: Base(
                              Unit,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token0",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "token1",
                          params: [],
                          return_type: Base(
                              Address,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transfer",
                          params: [
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                      FunctionAttributes {
                          is_public: true,
                          name: "transferFrom",
                          params: [
                              (
                                  "from",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "to",
                                  Base(
                                      Address,
                                  ),
                              ),
                              (
                                  "value",
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ),
                          ],
                          return_type: Base(
                              Bool,
                          ),
                      },
                  ],
              },
          ),
          func_name: "create2",
      }

note: 
    ┌─ demos/uniswap.fe:322:9
    │
322 │         pair.initialize(token0, token1)
    │         ^^^^^^^^^^^^^^^ attributes hash: 15856680294290209687
    │
    = ValueAttribute

note: 
    ┌─ demos/uniswap.fe:324:38
    │
324 │         self.pairs[token0][token1] = address(pair)
    │                                      ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:325:38
    │
325 │         self.pairs[token1][token0] = address(pair)
    │                                      ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:326:45
    │
326 │         self.all_pairs[self.pair_counter] = address(pair)
    │                                             ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:329:47
    │
329 │         emit PairCreated(token0, token1, pair=address(pair), index=self.pair_counter)
    │                                               ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
    ┌─ demos/uniswap.fe:330:16
    │
330 │         return address(pair)
    │                ^^^^^^^ attributes hash: 14203407709342965641
    │
    = TypeConstructor {
          typ: Base(
              Address,
          ),
      }

note: 
   ┌─ demos/uniswap.fe:30:5
   │  
30 │ ╭     event Approval:
31 │ │         idx owner: address
32 │ │         idx spender: address
33 │ │         value: u256
   │ ╰───────────────────^ attributes hash: 33203932515406232
   │  
   = EventDef {
         name: "Approval",
         fields: [
             (
                 "owner",
                 Base(
                     Address,
                 ),
             ),
             (
                 "spender",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [
             0,
             1,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:35:5
   │  
35 │ ╭     event Transfer:
36 │ │         idx from: address
37 │ │         idx to: address
38 │ │         value: u256
   │ ╰───────────────────^ attributes hash: 13133831135344517982
   │  
   = EventDef {
         name: "Transfer",
         fields: [
             (
                 "from",
                 Base(
                     Address,
                 ),
             ),
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
             (
                 "value",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [
             0,
             1,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:40:5
   │  
40 │ ╭     event Mint:
41 │ │         idx sender: address
42 │ │         amount0: u256
43 │ │         amount1: u256
   │ ╰─────────────────────^ attributes hash: 2843628716761322765
   │  
   = EventDef {
         name: "Mint",
         fields: [
             (
                 "sender",
                 Base(
                     Address,
                 ),
             ),
             (
                 "amount0",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "amount1",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [
             0,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:45:5
   │  
45 │ ╭     event Burn:
46 │ │         idx sender: address
47 │ │         amount0: u256
48 │ │         amount1: u256
49 │ │         idx to: address
   │ ╰───────────────────────^ attributes hash: 2179438666396421974
   │  
   = EventDef {
         name: "Burn",
         fields: [
             (
                 "sender",
                 Base(
                     Address,
                 ),
             ),
             (
                 "amount0",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "amount1",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
         ],
         indexed_fields: [
             0,
             3,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:51:5
   │  
51 │ ╭     event Swap:
52 │ │         idx sender: address
53 │ │         amount0_in: u256
54 │ │         amount1_in: u256
55 │ │         amount0_out: u256
56 │ │         amount1_out: u256
57 │ │         idx to: address
   │ ╰───────────────────────^ attributes hash: 13230512840943275093
   │  
   = EventDef {
         name: "Swap",
         fields: [
             (
                 "sender",
                 Base(
                     Address,
                 ),
             ),
             (
                 "amount0_in",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "amount1_in",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "amount0_out",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "amount1_out",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "to",
                 Base(
                     Address,
                 ),
             ),
         ],
         indexed_fields: [
             0,
             5,
         ],
     }

note: 
   ┌─ demos/uniswap.fe:59:5
   │  
59 │ ╭     event Sync:
60 │ │         reserve0: u256
61 │ │         reserve1: u256
   │ ╰──────────────────────^ attributes hash: 13994204795377527353
   │  
   = EventDef {
         name: "Sync",
         fields: [
             (
                 "reserve0",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "reserve1",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         indexed_fields: [],
     }

note: 
    ┌─ demos/uniswap.fe:294:5
    │  
294 │ ╭     event PairCreated:
295 │ │         idx token0: address
296 │ │         idx token1: address
297 │ │         pair: address
298 │ │         index: u256
    │ ╰───────────────────^ attributes hash: 6014823549090347161
    │  
    = EventDef {
          name: "PairCreated",
          fields: [
              (
                  "token0",
                  Base(
                      Address,
                  ),
              ),
              (
                  "token1",
                  Base(
                      Address,
                  ),
              ),
              (
                  "pair",
                  Base(
                      Address,
                  ),
              ),
              (
                  "index",
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ),
          ],
          indexed_fields: [
              0,
              1,
          ],
      }

note: 
  ┌─ demos/uniswap.fe:2:32
  │
2 │     pub def balanceOf(account: address) -> u256:
  │                                ^^^^^^^ attributes hash: 928477466454064117
  │
  = Base(
        Address,
    )

note: 
  ┌─ demos/uniswap.fe:2:44
  │
2 │     pub def balanceOf(account: address) -> u256:
  │                                            ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
  ┌─ demos/uniswap.fe:5:33
  │
5 │     pub def transfer(recipient: address, amount: u256) -> bool:
  │                                 ^^^^^^^ attributes hash: 928477466454064117
  │
  = Base(
        Address,
    )

note: 
  ┌─ demos/uniswap.fe:5:50
  │
5 │     pub def transfer(recipient: address, amount: u256) -> bool:
  │                                                  ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
  ┌─ demos/uniswap.fe:5:59
  │
5 │     pub def transfer(recipient: address, amount: u256) -> bool:
  │                                                           ^^^^ attributes hash: 5425972608982369985
  │
  = Base(
        Bool,
    )

note: 
   ┌─ demos/uniswap.fe:31:20
   │
31 │         idx owner: address
   │                    ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:32:22
   │
32 │         idx spender: address
   │                      ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:33:16
   │
33 │         value: u256
   │                ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:36:19
   │
36 │         idx from: address
   │                   ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:37:17
   │
37 │         idx to: address
   │                 ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:38:16
   │
38 │         value: u256
   │                ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:41:21
   │
41 │         idx sender: address
   │                     ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:42:18
   │
42 │         amount0: u256
   │                  ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:43:18
   │
43 │         amount1: u256
   │                  ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:46:21
   │
46 │         idx sender: address
   │                     ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:47:18
   │
47 │         amount0: u256
   │                  ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:48:18
   │
48 │         amount1: u256
   │                  ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:49:17
   │
49 │         idx to: address
   │                 ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:52:21
   │
52 │         idx sender: address
   │                     ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:53:21
   │
53 │         amount0_in: u256
   │                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:54:21
   │
54 │         amount1_in: u256
   │                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:55:22
   │
55 │         amount0_out: u256
   │                      ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:56:22
   │
56 │         amount1_out: u256
   │                      ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:57:17
   │
57 │         idx to: address
   │                 ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:60:19
   │
60 │         reserve0: u256
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:61:19
   │
61 │         reserve1: u256
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:66:26
   │
66 │     pub def factory() -> address:
   │                          ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:69:25
   │
69 │     pub def token0() -> address:
   │                         ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:72:25
   │
72 │     pub def token1() -> address:
   │                         ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:75:19
   │
75 │     def _mint(to: address, value: u256):
   │                   ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:75:35
   │
75 │     def _mint(to: address, value: u256):
   │                                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:80:21
   │
80 │     def _burn(from: address, value: u256):
   │                     ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:80:37
   │
80 │     def _burn(from: address, value: u256):
   │                                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:85:25
   │
85 │     def _approve(owner: address, spender: address, value: u256):
   │                         ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:85:43
   │
85 │     def _approve(owner: address, spender: address, value: u256):
   │                                           ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:85:59
   │
85 │     def _approve(owner: address, spender: address, value: u256):
   │                                                           ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:89:25
   │
89 │     def _transfer(from: address, to: address, value: u256):
   │                         ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:89:38
   │
89 │     def _transfer(from: address, to: address, value: u256):
   │                                      ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:89:54
   │
89 │     def _transfer(from: address, to: address, value: u256):
   │                                                      ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:94:30
   │
94 │     pub def approve(spender: address, value: u256) -> bool:
   │                              ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:94:46
   │
94 │     pub def approve(spender: address, value: u256) -> bool:
   │                                              ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:94:55
   │
94 │     pub def approve(spender: address, value: u256) -> bool:
   │                                                       ^^^^ attributes hash: 5425972608982369985
   │
   = Base(
         Bool,
     )

note: 
   ┌─ demos/uniswap.fe:98:26
   │
98 │     pub def transfer(to: address, value: u256) -> bool:
   │                          ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:98:42
   │
98 │     pub def transfer(to: address, value: u256) -> bool:
   │                                          ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:98:51
   │
98 │     pub def transfer(to: address, value: u256) -> bool:
   │                                                   ^^^^ attributes hash: 5425972608982369985
   │
   = Base(
         Bool,
     )

note: 
    ┌─ demos/uniswap.fe:102:32
    │
102 │     pub def transferFrom(from: address, to: address, value: u256) -> bool:
    │                                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:102:45
    │
102 │     pub def transferFrom(from: address, to: address, value: u256) -> bool:
    │                                             ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:102:61
    │
102 │     pub def transferFrom(from: address, to: address, value: u256) -> bool:
    │                                                             ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:102:70
    │
102 │     pub def transferFrom(from: address, to: address, value: u256) -> bool:
    │                                                                      ^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:109:32
    │
109 │     pub def balanceOf(account: address) -> u256:
    │                                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:109:44
    │
109 │     pub def balanceOf(account: address) -> u256:
    │                                            ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:112:32
    │
112 │     pub def get_reserves() -> (u256, u256, u256):
    │                                ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:112:38
    │
112 │     pub def get_reserves() -> (u256, u256, u256):
    │                                      ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:112:44
    │
112 │     pub def get_reserves() -> (u256, u256, u256):
    │                                            ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:112:31
    │
112 │     pub def get_reserves() -> (u256, u256, u256):
    │                               ^^^^^^^^^^^^^^^^^^ attributes hash: 10503701570097950560
    │
    = Tuple(
          Tuple {
              items: [
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:116:32
    │
116 │     pub def initialize(token0: address, token1: address):
    │                                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:116:49
    │
116 │     pub def initialize(token0: address, token1: address):
    │                                                 ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:123:27
    │
123 │     def _update(balance0: u256, balance1: u256, reserve0: u256, reserve1: u256):
    │                           ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:123:43
    │
123 │     def _update(balance0: u256, balance1: u256, reserve0: u256, reserve1: u256):
    │                                           ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:123:59
    │
123 │     def _update(balance0: u256, balance1: u256, reserve0: u256, reserve1: u256):
    │                                                           ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:123:75
    │
123 │     def _update(balance0: u256, balance1: u256, reserve0: u256, reserve1: u256):
    │                                                                           ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:139:29
    │
139 │     def _mint_fee(reserve0: u256, reserve1: u256) -> bool:
    │                             ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:139:45
    │
139 │     def _mint_fee(reserve0: u256, reserve1: u256) -> bool:
    │                                             ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:139:54
    │
139 │     def _mint_fee(reserve0: u256, reserve1: u256) -> bool:
    │                                                      ^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:159:22
    │
159 │     pub def mint(to: address) -> u256:
    │                      ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:159:34
    │
159 │     pub def mint(to: address) -> u256:
    │                                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:189:22
    │
189 │     pub def burn(to: address) -> (u256, u256):
    │                      ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:189:35
    │
189 │     pub def burn(to: address) -> (u256, u256):
    │                                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:189:41
    │
189 │     pub def burn(to: address) -> (u256, u256):
    │                                         ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:189:34
    │
189 │     pub def burn(to: address) -> (u256, u256):
    │                                  ^^^^^^^^^^^^ attributes hash: 13832975417483913034
    │
    = Tuple(
          Tuple {
              items: [
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
                  Base(
                      Numeric(
                          U256,
                      ),
                  ),
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:220:31
    │
220 │     pub def swap(amount0_out: u256, amount1_out: u256, to: address):
    │                               ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:220:50
    │
220 │     pub def swap(amount0_out: u256, amount1_out: u256, to: address):
    │                                                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:220:60
    │
220 │     pub def swap(amount0_out: u256, amount1_out: u256, to: address):
    │                                                            ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:257:22
    │
257 │     pub def skim(to: address):
    │                      ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:270:19
    │
270 │     def sqrt(val: u256) -> u256:
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:270:28
    │
270 │     def sqrt(val: u256) -> u256:
    │                            ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:282:16
    │
282 │     def min(x: u256, y: u256) -> u256:
    │                ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:282:25
    │
282 │     def min(x: u256, y: u256) -> u256:
    │                         ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:282:34
    │
282 │     def min(x: u256, y: u256) -> u256:
    │                                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:295:21
    │
295 │         idx token0: address
    │                     ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:296:21
    │
296 │         idx token1: address
    │                     ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:297:15
    │
297 │         pair: address
    │               ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:298:16
    │
298 │         index: u256
    │                ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:300:37
    │
300 │     pub def __init__(fee_to_setter: address):
    │                                     ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:303:25
    │
303 │     pub def fee_to() -> address:
    │                         ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:306:32
    │
306 │     pub def fee_to_setter() -> address:
    │                                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:309:35
    │
309 │     pub def all_pairs_length() -> u256:
    │                                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:312:34
    │
312 │     pub def create_pair(token_a: address, token_b: address) -> address:
    │                                  ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:312:52
    │
312 │     pub def create_pair(token_a: address, token_b: address) -> address:
    │                                                    ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:312:64
    │
312 │     pub def create_pair(token_a: address, token_b: address) -> address:
    │                                                                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:332:32
    │
332 │     pub def set_fee_to(fee_to: address):
    │                                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:336:46
    │
336 │     pub def set_fee_to_setter(fee_to_setter: address):
    │                                              ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
   ┌─ demos/uniswap.fe:12:19
   │
12 │     balances: Map<address, u256>
   │                   ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:12:28
   │
12 │     balances: Map<address, u256>
   │                            ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:12:15
   │
12 │     balances: Map<address, u256>
   │               ^^^^^^^^^^^^^^^^^^ attributes hash: 6665160789021782098
   │
   = Map(
         Map {
             key: Address,
             value: Base(
                 Numeric(
                     U256,
                 ),
             ),
         },
     )

note: 
   ┌─ demos/uniswap.fe:13:21
   │
13 │     allowances: Map<address, Map<address, u256>>
   │                     ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:13:34
   │
13 │     allowances: Map<address, Map<address, u256>>
   │                                  ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:13:43
   │
13 │     allowances: Map<address, Map<address, u256>>
   │                                           ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:13:30
   │
13 │     allowances: Map<address, Map<address, u256>>
   │                              ^^^^^^^^^^^^^^^^^^ attributes hash: 6665160789021782098
   │
   = Map(
         Map {
             key: Address,
             value: Base(
                 Numeric(
                     U256,
                 ),
             ),
         },
     )

note: 
   ┌─ demos/uniswap.fe:13:17
   │
13 │     allowances: Map<address, Map<address, u256>>
   │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 5466994551336559747
   │
   = Map(
         Map {
             key: Address,
             value: Map(
                 Map {
                     key: Address,
                     value: Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 },
             ),
         },
     )

note: 
   ┌─ demos/uniswap.fe:14:19
   │
14 │     total_supply: u256
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:16:17
   │
16 │     nonces: Map<address, u256>
   │                 ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:16:26
   │
16 │     nonces: Map<address, u256>
   │                          ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:16:13
   │
16 │     nonces: Map<address, u256>
   │             ^^^^^^^^^^^^^^^^^^ attributes hash: 6665160789021782098
   │
   = Map(
         Map {
             key: Address,
             value: Base(
                 Numeric(
                     U256,
                 ),
             ),
         },
     )

note: 
   ┌─ demos/uniswap.fe:18:14
   │
18 │     factory: address
   │              ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:19:13
   │
19 │     token0: address
   │             ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:20:13
   │
20 │     token1: address
   │             ^^^^^^^ attributes hash: 928477466454064117
   │
   = Base(
         Address,
     )

note: 
   ┌─ demos/uniswap.fe:22:15
   │
22 │     reserve0: u256
   │               ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:23:15
   │
23 │     reserve1: u256
   │               ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:24:27
   │
24 │     block_timestamp_last: u256
   │                           ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:26:29
   │
26 │     price0_cumulative_last: u256
   │                             ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:27:29
   │
27 │     price1_cumulative_last: u256
   │                             ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ demos/uniswap.fe:28:13
   │
28 │     k_last: u256
   │             ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
    ┌─ demos/uniswap.fe:125:26
    │
125 │         block_timestamp: u256 = block.timestamp % 2**32
    │                          ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:127:23
    │
127 │         time_elapsed: u256 = block_timestamp - self.block_timestamp_last # overflow is desired
    │                       ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:140:17
    │
140 │         fee_to: address = UniswapV2Factory(self.factory).fee_to()
    │                 ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:141:17
    │
141 │         fee_on: bool = fee_to != address(0)
    │                 ^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:142:17
    │
142 │         k_last: u256 = self.k_last # gas savings
    │                 ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:145:25
    │
145 │                 root_k: u256 = self.sqrt(reserve0 * reserve1)
    │                         ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:146:30
    │
146 │                 root_k_last: u256 = self.sqrt(k_last)
    │                              ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:148:32
    │
148 │                     numerator: u256 = self.total_supply * root_k - root_k_last
    │                                ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:149:34
    │
149 │                     denominator: u256 = root_k * 5 + root_k_last
    │                                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:150:32
    │
150 │                     liquidity: u256 = numerator / denominator
    │                                ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:160:28
    │
160 │         MINIMUM_LIQUIDITY: u256 = 1000
    │                            ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:161:19
    │
161 │         reserve0: u256 = self.reserve0
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:162:19
    │
162 │         reserve1: u256 = self.reserve1
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:163:19
    │
163 │         balance0: u256 = ERC20(self.token0).balanceOf(self.address)
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:164:19
    │
164 │         balance1: u256 = ERC20(self.token1).balanceOf(self.address)
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:165:18
    │
165 │         amount0: u256 = balance0 - self.reserve0
    │                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:166:18
    │
166 │         amount1: u256 = balance1 - self.reserve1
    │                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:168:17
    │
168 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                 ^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:169:23
    │
169 │         total_supply: u256 = self.total_supply # gas savings, must be defined here since totalSupply can update in _mintFee
    │                       ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:170:20
    │
170 │         liquidity: u256 = 0
    │                    ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:190:19
    │
190 │         reserve0: u256 = self.reserve0
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:191:19
    │
191 │         reserve1: u256 = self.reserve1
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:192:17
    │
192 │         token0: ERC20 = ERC20(self.token0)
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:193:17
    │
193 │         token1: ERC20 = ERC20(self.token1)
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:194:19
    │
194 │         balance0: u256 = token0.balanceOf(self.address)
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:195:19
    │
195 │         balance1: u256 = token1.balanceOf(self.address)
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:196:20
    │
196 │         liquidity: u256 = self.balances[self.address]
    │                    ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:198:17
    │
198 │         fee_on: bool = self._mint_fee(reserve0, reserve1)
    │                 ^^^^ attributes hash: 5425972608982369985
    │
    = Base(
          Bool,
      )

note: 
    ┌─ demos/uniswap.fe:199:23
    │
199 │         total_supply: u256 = self.total_supply # gas savings, must be defined here since total_supply can update in _mintFee
    │                       ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:200:18
    │
200 │         amount0: u256 = (liquidity * balance0) / total_supply # using balances ensures pro-rata distribution
    │                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:201:18
    │
201 │         amount1: u256 = (liquidity * balance1) / total_supply # using balances ensures pro-rata distribution
    │                  ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:222:19
    │
222 │         reserve0: u256 = self.reserve0
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:223:19
    │
223 │         reserve1: u256 = self.reserve1
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:226:17
    │
226 │         token0: ERC20 = ERC20(self.token0)
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:227:17
    │
227 │         token1: ERC20 = ERC20(self.token1)
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:240:19
    │
240 │         balance0: u256 = token0.balanceOf(self.address)
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:241:19
    │
241 │         balance1: u256 = token1.balanceOf(self.address)
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:243:21
    │
243 │         amount0_in: u256 = balance0 - (reserve0 - amount0_out) if balance0 > reserve0 - amount0_out else 0
    │                     ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:244:21
    │
244 │         amount1_in: u256 = balance1 - (reserve1 - amount1_out) if balance1 > reserve1 - amount1_out else 0
    │                     ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:248:28
    │
248 │         balance0_adjusted: u256 = balance0 * 1000 - amount0_in * 3
    │                            ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:249:28
    │
249 │         balance1_adjusted: u256 = balance1 * 1000 - amount1_in * 3
    │                            ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:258:17
    │
258 │         token0: ERC20 = ERC20(self.token0) # gas savings
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:259:17
    │
259 │         token1: ERC20 = ERC20(self.token1) # gas savings
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:266:17
    │
266 │         token0: ERC20 = ERC20(self.token0)
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:267:17
    │
267 │         token1: ERC20 = ERC20(self.token1)
    │                 ^^^^^ attributes hash: 4971698755586116393
    │
    = Contract(
          Contract {
              name: "ERC20",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "recipient",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "amount",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )

note: 
    ┌─ demos/uniswap.fe:271:12
    │
271 │         z: u256
    │            ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:274:16
    │
274 │             x: u256 = val / 2 + 1
    │                ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:286:13
    │
286 │     fee_to: address
    │             ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:287:20
    │
287 │     fee_to_setter: address
    │                    ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:289:16
    │
289 │     pairs: Map<address, Map<address, address>>
    │                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:289:29
    │
289 │     pairs: Map<address, Map<address, address>>
    │                             ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:289:38
    │
289 │     pairs: Map<address, Map<address, address>>
    │                                      ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:289:25
    │
289 │     pairs: Map<address, Map<address, address>>
    │                         ^^^^^^^^^^^^^^^^^^^^^ attributes hash: 6302554762988083562
    │
    = Map(
          Map {
              key: Address,
              value: Base(
                  Address,
              ),
          },
      )

note: 
    ┌─ demos/uniswap.fe:289:12
    │
289 │     pairs: Map<address, Map<address, address>>
    │            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 453209971663921309
    │
    = Map(
          Map {
              key: Address,
              value: Map(
                  Map {
                      key: Address,
                      value: Base(
                          Address,
                      ),
                  },
              ),
          },
      )

note: 
    ┌─ demos/uniswap.fe:291:16
    │
291 │     all_pairs: address[100]
    │                ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:291:16
    │
291 │     all_pairs: address[100]
    │                ^^^^^^^^^^^^ attributes hash: 6524582745675966698
    │
    = Array(
          Array {
              size: 100,
              inner: Address,
          },
      )

note: 
    ┌─ demos/uniswap.fe:292:19
    │
292 │     pair_counter: u256
    │                   ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:315:17
    │
315 │         token0: address = token_a if token_a < token_b else token_b
    │                 ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:316:17
    │
316 │         token1: address = token_a if token_a > token_b else token_b
    │                 ^^^^^^^ attributes hash: 928477466454064117
    │
    = Base(
          Address,
      )

note: 
    ┌─ demos/uniswap.fe:320:15
    │
320 │         salt: u256 = keccak256((token0, token1).abi_encode())
    │               ^^^^ attributes hash: 4293763436908729629
    │
    = Base(
          Numeric(
              U256,
          ),
      )

note: 
    ┌─ demos/uniswap.fe:321:15
    │
321 │         pair: UniswapV2Pair = UniswapV2Pair.create2(0, salt)
    │               ^^^^^^^^^^^^^ attributes hash: 13093166435588373534
    │
    = Contract(
          Contract {
              name: "UniswapV2Pair",
              functions: [
                  FunctionAttributes {
                      is_public: true,
                      name: "approve",
                      params: [
                          (
                              "spender",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "value",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "balanceOf",
                      params: [
                          (
                              "account",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "burn",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Tuple(
                          Tuple {
                              items: [
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ],
                          },
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "factory",
                      params: [],
                      return_type: Base(
                          Address,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "get_reserves",
                      params: [],
                      return_type: Tuple(
                          Tuple {
                              items: [
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                                  Base(
                                      Numeric(
                                          U256,
                                      ),
                                  ),
                              ],
                          },
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "initialize",
                      params: [
                          (
                              "token0",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "token1",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "mint",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Numeric(
                              U256,
                          ),
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "skim",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "swap",
                      params: [
                          (
                              "amount0_out",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                          (
                              "amount1_out",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                      ],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "sync",
                      params: [],
                      return_type: Base(
                          Unit,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "token0",
                      params: [],
                      return_type: Base(
                          Address,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "token1",
                      params: [],
                      return_type: Base(
                          Address,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transfer",
                      params: [
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "value",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
                  FunctionAttributes {
                      is_public: true,
                      name: "transferFrom",
                      params: [
                          (
                              "from",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "to",
                              Base(
                                  Address,
                              ),
                          ),
                          (
                              "value",
                              Base(
                                  Numeric(
                                      U256,
                                  ),
                              ),
                          ),
                      ],
                      return_type: Base(
                          Bool,
                      ),
                  },
              ],
          },
      )


